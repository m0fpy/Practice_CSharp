<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PSHOST</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger">
            <summary>
            Implements ILogger interface and serves as a proxy between ILogger on a client side object and MSBuild
            Should be appropriately registered for the MSBuild task, for example using Mux loggers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger.Verbosity">
            <summary>
            The level of detail to show in the event log.
            </summary>
            <value>Verbosity level</value>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger.Parameters">
            <summary>
            The IDE logger does not take parameters.
            </summary>
            <value>null</value>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
            <summary>
            Signs up the logger for all build events.
            </summary>
            <param name="eventSource">Available events.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.AggregatedHostLogger.Shutdown">
            <summary>
            The IDE logger does not need to release any resources.
            However, this is our last opportunity to drain any events we haven't
            saved yet. We expect this method to always be called on the main thread.
            </summary>
            <remarks>Actually, this WON'T be called on the main thread if using out of process build.</remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildResultsReader">
            <summary>
            Wrapper implementation for dtbb result source
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildResultsReader.#ctor(Microsoft.Build.Execution.BuildResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildResultsReader" /> class.
            </summary>
            <param name="buildResults">dtbb build results</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildResultsReader.TryGetValue(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader}@)">
            <inheritdoc />
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SerialBuilder.lockerForDtarCacheFile">
            <summary>
            Object to protect the DTAR cache file for this project.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PropertyPositionShim.UseExistingOrCreateAfterLastPropertyGroup">
            <summary>
            Replace existing compatible property if present.
            Otherwise, if possible, create a new property in an existing compatible property group.
            If necessary, create a new compatible property group right after the last one in the project.
            This should really be called "UseExistingOrCreateAfterLastPropertyGroupButNotAfterAnyImport"
            to more accurately state what it did. Specifically, new configurations should never
            go after the import. If we just did what the old name said, they could go there,
            as post build events go in a property group after the last import.
            This is public interface so we can't easily change the name now.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PropertyPositionShim.UseExistingOrCreateAfterLastImport">
            <summary>
            Replace existing compatible property if present.
            Otherwise, create the property after the last imported project.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.virtualProperties">
            <summary>
            Virtual properties. These must be set on the next ProjectInstance
            just before it is built.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.IsBuilding">
            <summary>
            Project/ProjectCollection don't have a notion
            of IsBuilding, as they're disconnected.
            However, we want to preserve the check we had
            before, so simulate it with a flag on the EngineShim.
            TODO: Add real implementation after adding Build functionality
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.ProjectFileEncoding">
            <summary>
            Gets project file encoding as uint which will be converted on the client side to
            enum ProjectFileEncoding
            {
              Unicode = 0,
              Ansi = 1,
              Utf8 = 2
            }
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.ToolsVersion">
            <summary>
            The project's ToolsVersion as defined in the project file
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            ##########################################################################
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.HasToolsVersionAttribute">
            <summary>
            Returns true if project tag in file actually has the ToolsVersion attribute.
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            ##########################################################################
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.IsInProcBuildAllowed">
            <summary>
            Indicates whether in-proc builds are currently allowed for this project.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.GetPropertyGroups(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection@)">
            <summary>
            Read-only accessor for the raw property groups of this project.
            This is essentially a reflection of the data in the XML for this
            project's properties as well as any &lt;Import&gt;'d projects.
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            It enumerates through it to possibly call RemovePropertyByName in particular groups.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.GetEvaluatedProperties(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup@)">
             <summary>
             Read-only accessor for the final set of evaluated properties for
             this project.  This takes into account all conditions and property
             expansions, and gives back a single linear collection of project-level
             properties, which includes global properties, environment variable
             properties, reserved properties, and normal/imported properties.
             Through this collection, the caller can modify any normal
             properties, and the changes will be reflected in the project file
             when it is saved again.  However, adding or deleting properties
             from this collection will not impact the project.
            
             PERF WARNING: cloning a BuildPropertyGroup can be very expensive -- use
             only when a copy of the entire property bag is strictly necessary
             </summary>
             <remarks>
             ##########################################################################
             VS DOES use this.
              -- It only calls GetStringArraysForAllProperties on the result.
              It does not use it to get properties from a build, so we do not need to consult any project instance.
             ##########################################################################
             </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SetProperty(System.String,System.String,System.String)">
             <summary>
             This method is called from the IDE to set a particular property at
             the project level.  The IDE doesn't care which property group it's
             in, as long as it gets set.  This method will search the existing
             property groups for a property with this name.  If found, it will
             change the value in place.  Otherwise, it will either add a new
             property to that property group, or possibly even add a new property
             group to the project.
            
             This method also takes the "Condition" string for the property group
             that the IDE wants this property placed under.
             </summary>
             <remarks>
             ##########################################################################
             VS may use this.
             Note: as in the old OM, the condition is what should be on the **PropertyGroup**, not the property itself.
             ##########################################################################
             </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SetPropertyAt(System.String,System.String,System.String,System.UInt32)">
            <summary>
            Set a property at a particular position inside the project file.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
            <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SetPropertyLiteralAt(System.String,System.String,System.String,System.UInt32)">
             <summary>
             Set a property at a particular position inside the project file.
             The property will be in a group that has the specified condition.
             If necessary, a new property or property group will be created.
            
             Treats the property value as a literal string, meaning that any special characters within will get escaped
             before the property is persisted, thereby circumventing any attempts by the MSBuild engine
             to parse the property value.
             </summary>
             <remarks>
             ##########################################################################
             VS DOES use this.
             Note: as in the old OM, the condition is what should be on the **PropertyGroup**, not the property itself.
             ##########################################################################
             </remarks>
             <param name="propertyName">Property name</param>
             <param name="propertyValue">Property value</param>
             <param name="condition">Condition</param>
             <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SetPropertyAt(System.String,System.String,System.String,Microsoft.VisualStudio.ProjectServices.Hosting.PropertyPositionShim)">
             <summary>
             Set a property at a particular position inside the project file.
             The property will be in a group that has the specified condition.
             If necessary, a new property or property group will be created.
             </summary>
             <remarks>
             ##########################################################################
             VS DOES use this, using both
             PropertyPositionShim.UseExistingOrCreateAfterLastPropertyGroup and
             PropertyPositionShim.UseExistingOrCreateAfterLastImport
             Note: as in the old OM, the condition is what should be on the **PropertyGroup**, not the property itself.
             Note: as in the old OM, the value of the property won't be evaluated immediately, if a condition was provided. The project will become dirty.
            
             "UseExistingOrCreateAfterLastPropertyGroup" should really be called
             "UseExistingOrCreateAfterLastPropertyGroupButNotAfterAnyImportUnlessThatImportIsBeforeAnyOtherPropertyGroupsInTheProject"
             to more accurately state what it did. Specifically, new configurations should never
             go after the import of e.g. Microsoft.CSharp.targets. If we just did what the old name said, they could go there,
             as post build events go in a property group after the last import. And on the other hand, now that we have
             an initial import in most of our project files (Microsoft.Common.props), we don't want to insert the new property
             group before that import, because then it will be completely out of order with respect to the other property groups
             that it is supposed to follow.
             This is public interface so we can't easily change the name now.
             ##########################################################################
             In the case of both PropertyPositionShims, they are interpreted to mean "Use any existing
             property group that has a matching condition, BUT if there is no matching property group,
             create the new group in the place indicated" (e.g. either after the last property group that's
             before any import or after the last import).
             ##########################################################################
             </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.EnsureImportedProjectOnDisk(Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim)">
            <summary>
            if the imported file (that is .user file) does not exist yet we need to save it and mark the project
            and cache dirty to make the project actually import it.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.RemovePropertyGroupsWithMatchingCondition(System.String)">
            <summary>
            Removes all &lt;PropertyGroup&gt;'s from the main project file that have a
            specific "Condition".  This will not remove any property groups from
            imported project files.
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this, when a configuration is deleted.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.MarkProjectAsDirty">
            <summary>
            This forces a re-evaluation of the project the next time somebody
            calls EvaluatedProperties or EvaluatedItems.  It is also a signal
            that the project file is dirty and needs to be saved to disk.
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            -- For properties that it (for some reason) prefers to set just before Save. To trigger
               a save, it sets this.
            -- When adding a new "folder" to the project. It doesn't tell MSBuild about these until it
               saves, so it can eliminate any that are already implied by items in them. However it needs
               to record that the project will need saving later.
            -- In some cases (?backups) it wants to re-mark the project as dirty after saving.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.Save(System.String)">
            <summary>
            Saves the current contents of the project to an XML project file on disk.
            This method will NOT add the ?xml node if it's not already present
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SaveWithEncoding(System.String,System.UInt32)">
            <summary>
            Saves the current contents of the project to an XML project file on
            disk using the supplied encoding.
            enum ProjectFileEncoding
            {
              Unicode = 0,
              Ansi = 1,
              Utf8 = 2
            }
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.Unload">
            <summary>
            IDEs should call this when they're done with a particular project.
            After calling this method, nobody should attempt to use the project anymore.
            </summary>
            <remarks>
            ##########################################################################
            VS DOES use this.
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.AddNewPropertyGroup(System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup@)">
            <summary>
            Adds a new &lt;PropertyGroup&gt; element to the project, and returns the
            corresponding BuildPropertyGroup object which can then be populated with
            properties.
            </summary>
            <remarks>
            ##########################################################################
            VS uses this in the implementation of IVsBuildPropertyStorage2::SetPropertyValueEx
            in vsproject\vsprjfactory.cpp
            ##########################################################################
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.Escape(System.String,System.String@)">
            <summary>
            Escapes given string, that is replaces special characters with escape sequences that allow MSBuild hosts
            to treat MSBuild-interpreted characters literally (';' becomes "%3b" and so on).
            </summary>
            <param name="input">string to escape</param>
            <param name="output">escaped string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedProjectShim.SaveWithEncoding(System.String,System.Text.Encoding)">
             <summary>
             Real method that does all saving for this shim.
             </summary>
             <remarks>
             NOTE: There is some extra work here that needs explanation.
            
             When saving the main project, VS tells this shim to save it to a temporary file path. Then
             it does ::CopyFile to the real path, and finally sets FullFileName on this shim back to the
             correct path. (The reason it does this is so that if something goes wrong with the save process,
             the original project file is not corrupted.)
            
             In the new OM, when saving, the dirty bit is cleared, of course. But when the file path is changed,
             it's set again. That's reasonable, because arguably the file now needs saving at the new place. Also,
             it is part of the mechanism that tells evaluated projects that they need reevaluation: for a start,
             properties like MSBuildProjectPath need to change, and this is how they know.
            
             The effect of these two facts is that saving the project in VS would always leave the project dirty!
            
             (In the old OM, setting a new project path would update special project properties,
             and mark it dirty for reevaluation, but not dirty for saving. This was wrong really, but avoided
             this problem.)
            
             We can solve the problem in this shim by making sure VS always sets put_FullFileName after saving.
             Only langpufile.cpp needed adjustment.
             After that, this shim should not tell MSBuild the path a project is saved to. It should
             only pass through put_FullFileName. Since that will normally be what the path was originally, the
             dirtying doesn't happen.
             </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupBase">
            <summary>
            Base class for real implementations 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupBase.project">
            <summary>
            Project containing the element (directly or indirectly) or 
            to which the global properties relate
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupBase.#ctor(Microsoft.Build.Evaluation.Project)">
            <summary>
            Constructor over ProjectPropertyGroupBase.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupElement.element">
            <summary>
            Alternative backing XML element
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupElement.#ctor(Microsoft.Build.Evaluation.Project,Microsoft.Build.Construction.ProjectPropertyGroupElement)">
            <summary>
            Constructor over ProjectPropertyGroupElement.
            VS uses this indirectly as part of iterating over all properties in the project file, looking
            for configuration conditions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupEvaluated.#ctor(Microsoft.Build.Evaluation.Project)">
            <summary>
            Constructor over ProjectPropertyGroupEvaluated.
            VS uses this indirectly as part of iterating over all properties in the project file, looking
            for configuration conditions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedPropertyGroupGlobal.#ctor(Microsoft.Build.Evaluation.Project)">
            <summary>
            Constructor over ProjectPropertyGroup.
            VS uses this indirectly as part of iterating over all properties in the project file, looking
            for configuration conditions.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HostedTargetCollection.targets">
            <summary>
            Backing set of targets.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger">
            <summary>
            Implements ILogger interface and serves as a proxy between IHostedLoggerFeedback object and MSBuild
            Should be appropriately registered for the MSBuild task, for example using Mux loggers
            </summary>
            <remarks>
            It wraps a ConsoleLogger, in order to force logging to be on the UI thread. It also needs to
            add any errors and warnings to the VS task list; it could do that by registering its own two event handlers,
            but it has to register for all events anyway to avoid the thread issue.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.Verbosity">
            <summary>
            The level of detail to show in the event log.
            </summary>
            <value>Verbosity level.</value>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.Parameters">
            <summary>
            The IDE logger does not take parameters.
            </summary>
            <value>null</value>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
            <summary>
            Signs up the logger for all build events.
            </summary>
            <param name="eventSource">Available events.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.Shutdown">
            <summary>
            The IDE logger does not need to release any resources.
            However, this is our last opportunity to drain any events we haven't
            saved yet. We expect this method to always be called on the main thread.
            </summary>
            <remarks>Actually, this WON'T be called on the main thread if using out of process build.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.ConnectEventHandlers(Microsoft.Build.Framework.IEventSource)">
            <summary>
            Depending on the verbosity connect the event handlers to the event source.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
            <summary>
            Determines whether the current verbosity setting is at least the value
            passed in.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.LoggerEventHandler(System.Object,Microsoft.Build.Framework.BuildEventArgs)">
            <summary>
            Callback function for when events are raised by the build engine.
            </summary>
            <owner>JomoF</owner>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.SendEventToIde(Microsoft.Build.Framework.BuildEventArgs)">
            <summary>
            Logs an event to the IDE by taking advantage of the console logger's output.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.SendEventToConsoleLogger(Microsoft.Build.Framework.BuildEventArgs)">
            <summary>
            Give the contained console logger a crack at the event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostLogger.Write(System.String)">
            <summary>
            Write a line of text without a carriage return to the IDE log window. This method is typically called via a delegate.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostServices">
            <summary>
            PSHost statics.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.Starter.DefaultVSInstallConeRelativeToPSHost">
            Default locations: 
            MSBuild:
            [VS install cone]\MSbuild\Current\Bin
            ProjectServices (including PSHost.exe):
            [VS install cone]\Common7\IDE\CommonExtensions\Microsoft\ProjectServices
            Relative location of [VS install cone] from the point of view of PSHost.exe disk location (under ProjectServices)
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.Starter.VSMSBuildFolder">
            VSMSBuild bin folder relative to [VS Install cone]
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.CollectionsHelpers">
             <summary>
             After rethinking here are the remoter collections rule to "minimize" and streamline the remoting strategy.
            
             First, there these are the generalized collection types we need to deal with:
             ("lists")
                IEnumerable[T]
                IReadOnlyCollection[T]
                ICollection[T]
                IList[T]
                List[T]
            
             ("dictionaries")
             IDictionary[TKey, TValue]
            
             Note currently all cases has TKey = string.
            
             1) All collection (both "lists" and "dictionaries" types) which underlying types (T and TValue) does not require "remoting" translation will be passed "as is".
             (we added native support in generator for bunch of other generics.)
            
             type of remoter.Collection (our SMP remoter API) will be the same as the link.Collection (MSBuild API).
             usage pattern in code will be :
             remoter.Collection = msbuildObject.Collection
             link.Collection = remoterProxy.Collection;
             Note: !! dictionary collection must have correct "Comparer" when SMP remoted. We added HostedInterfaceParamAttribute so we are able to specify that in case by case base.
            
             2) All "dictionaries" with a remotable type (TVAlue) will be remoted via "IReadOnlyColleciton[KeyValuePair[TKey,TValue]"
             type of remoter.Collection will be IReadOnlyColleciton[KeyValuePair[TKey,TValue]];
             usage pattern in code will be :
             remoter.Collection = msbuildObject.Collection.Export();
             link.Collection = remoterProxy.Collection.Import();
             we will have Impor()/Export() helper.
             Note: !! Import helper will be the one to use correct comparer when creating the storage Dictionary.
            
             3) All "list" with remotable type (T, remoted via "R") will be remoted via List[R]
             (use List[R] since it implement all other flavors and we can have single "Import")
             type of remoter.Collection : List[R]
             usage pattern in code will be :
             remoter.Collection = msbuildObject.Collection.Export();
             link.Collection = remoterProxy.Collection.Import();
             the Export() method will be List[R] Export(this IEnumerable[T])
             the Import() method will be List[T] Export(this List[R]);
             so that they will cover all possible flavors.
            
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3">
             <summary>
             SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter" />
            
             NOTE this is base class only. There is no MSBuild object of this type.
             </summary>
             <typeparam name="T">MSbuild type of actual construction container object</typeparam>
             <typeparam name="R">Remoter helper for T</typeparam>
             <typeparam name="Impl">the SMP Remoter impl for R. We do use this artificially so we can trick the limited C# template abilities</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementContainerRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementContainerRemoter#RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectChooseElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportGroupElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionGroupElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.ChangeItemType(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemElementRemoter#ChangeItemType(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemGroupElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOtherwiseElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyGroupElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.HasUnsavedChanges">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.TimeLastChanged">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.LastWriteTimeWhenRead">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.DirectoryPath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.FullPath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ProjectFileLocation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Encoding">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.RawXml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.PreserveFormatting">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateChooseElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateImportElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateItemElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateItemElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateItemDefinitionElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateItemDefinitionGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateItemGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateImportGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateMetadataElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateMetadataElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateOnErrorElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateOtherwiseElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateOutputElement(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateProjectExtensionsElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreatePropertyGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreatePropertyElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateTargetElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateTaskElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateUsingTaskParameterGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateUsingTaskBodyElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateWhenElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateProjectSdkElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Save(System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Save(System.IO.TextWriter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ReloadFrom(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.MarkDirty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#PreserveFormatting">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#Encoding">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#ProjectFileLocation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#FullPath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#DirectoryPath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#LastWriteTimeWhenRead">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#TimeLastChanged">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#HasUnsavedChanges">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#RawXml">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateChooseElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateImportElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateImportGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateItemDefinitionElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateItemDefinitionGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateItemElementEx(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateItemElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateItemGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateMetadataElementEx(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateMetadataElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateOnErrorElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateOtherwiseElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateOutputElement(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateProjectExtensionsElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateProjectSdkElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreatePropertyElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreatePropertyGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateTargetElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateTaskElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateUsingTaskBodyElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateUsingTaskParameterGroupElement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#CreateWhenElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#MarkDirty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#ReloadFromXmlReader(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#ReloadFrom(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#Save(Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRootElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRootElementRemoter#SaveToTextWriter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectSdkElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Returns">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTargetElementRemoter#Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTargetElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTargetElementRemoter#Returns">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Parameters">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.ParameterLocations">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.GetParameter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.SetParameter(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.RemoveParameter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.RemoveAllParameters">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#Parameters">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#ParameterLocations">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#GetParameter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#SetParameter(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#RemoveParameter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectTaskElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectTaskElementRemoter#RemoveAllParameters">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectWhenElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.FirstChild">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.LastChild">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPUsingTaskParameterGroupElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3">
             <summary>
             SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter" />
            
             NOTE this is base class only. There is no MSBuild object of this type.
            
             Another note about the implementation of actual "link" objects
             The C# does not really provide a easy way to efficiently implement inheritance in cases like we have.
             For abstract classes, when there is a hierarchy, it is no good way to share the implementation.
             Like if one have AFoo and ABar : AFoo
             we can provide implementation for Foo, but we can not use that for implementations for Bar.
             Since no multiple inheritance or other suitable mechanism for code share across classes is supported by C#,
             Instead Bar implementation should fully implement both AFoo and ABar classes.
            
             For construction model we do have a clear hierarchy like "Object" [: ProjectElementContainer] : ProjectElement
             that for the purpose of linking is supported via ObjectLink[:ProjectElementContainer]:ProjectElementLink.
             Now implementation of all ProjectElementLink and ProjectElementContainer link is in fact identical, but each "ObjectLink" needs to implement it separately.
            
             At least we structured our classes in such a way that we have to copy exactly the same template lines in each high level class.
            
             </summary>
             <typeparam name="T">MSbuild type of actual construction object</typeparam>
             <typeparam name="R">Remoter helper for T</typeparam>
             <typeparam name="Impl">the SMP Remoter impl for R. We do use this artificially so we can trick the limited C# template abilities</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#PureText">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#Attributes">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.BaseSMPProjectElementRemoter`3.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectElementRemoter#SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Content">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.GetSubElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.SetSubElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectExtensionsElementRemoter#Content">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectExtensionsElementRemoter#GetSubElement(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectExtensionsElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectExtensionsElementRemoter#SetSubElement(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.ImplicitImportLocation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.OriginalElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectImportElementRemoter#ImplicitImportLocation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectImportElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectImportElementRemoter#OriginalElement">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Value">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.ChangeName(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataElementRemoter#Value">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataElementRemoter#ChangeName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOnErrorElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectOutputElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Value">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.ChangeName(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyElementRemoter#Value">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyElementRemoter#ChangeName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.TaskBody">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskBodyElementRemoter.TaskBody">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.ContainingProject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.ElementName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.OuterElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.ExpressedAsAttribute">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.PreviousSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.NextSibling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Location">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.Attributes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.PureText">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.GetAttributeLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectUsingTaskParameterElementRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectUsingTaskParameterElementRemoter#Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter">
             <summary>
             TODO: Upgrade Generator so it can handle the cases like XmlAttributeLink directly.
             This means that instead of
                {result = new foo(); result.A = get(); result.B = get()},
             we can support
                { var a = get(); var b = get(); result = new foo(a, b);
            
             or perhaps do a custom IReadOnlyCollection[XmlAttributeLink] converter that can squash the strings. (most/all uri's will be the same)
            
             Note: It is very unlikely that anyone actually use this, so above improvements will be largely academic...
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.#ctor(Microsoft.Build.ObjectModelRemoting.XmlAttributeLink)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter" /> class.
            </summary>
            <param name="from">source</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.LocalName">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.LocalName" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.Value">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.Value" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.NamespaceURI">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.XmlAttributeLink.NamespaceURI" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPXmlAttributeRemoter.ToLink">
            <summary>
            Create a <see cref="T:Microsoft.Build.ObjectModelRemoting.XmlAttributeLink" /> object
            </summary>
            <returns>msbuild object</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.ItemType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.Metadata">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.GetMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.GetMetadataValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionLink.SetMetadataValue(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#ItemType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#Metadata">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#GetMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#GetMetadataValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemDefinitionRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemDefinitionRemoter#SetMetadataValue(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.EvaluatedInclude">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.MetadataCollection">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.DirectMetadata">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.HasMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.GetMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.GetMetadataValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.SetMetadataValue(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.RemoveMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.Rename(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemLink.ChangeItemType(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#EvaluatedInclude">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#MetadataCollection">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#DirectMetadata">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#ChangeItemType(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#GetMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#GetMetadataValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#HasMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#RemoveMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#Rename(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectItemRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectItemRemoter#SetMetadataValue(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ThrowInsteadOfSplittingItemElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.IsDirty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GlobalProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ItemTypes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ConditionedProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ItemDefinitions">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Items">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ItemsIgnoringCondition">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Imports">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ImportsIncludingDuplicates">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.AllEvaluatedProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.AllEvaluatedItemDefinitionMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.AllEvaluatedItems">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ToolsVersion">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.SubToolsetVersion">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.SkipEvaluation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.DisableMarkDirty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.IsBuildEnabled">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.LastEvaluationId">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings,Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Targets">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ExpandString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetAllGlobs(System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItemProvenance(System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItemProvenance(System.String,System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem,Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItems(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItemsByEvaluatedInclude(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetItemsIgnoringCondition(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetLogicalProject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetProperty(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.GetPropertyValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext)">
            <inheritdoc />
            TODO: not sure we need to figure out the evaluation context.
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.RemoveGlobalProperty(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.SaveLogicalProject(System.IO.TextWriter)">
            <inheritdoc />
            We can implement it, but it does not seems we have to.
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.SetGlobalProperty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.SetProperty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectLink.Unload">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.EvaluatedValueEscaped">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataLink.Predecessor">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataRemoter#Parent">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataRemoter#Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataRemoter#EvaluatedValueEscaped">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectMetadataRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectMetadataRemoter#Predecessor">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink">
            <summary>
            SMP implementation for <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink" /> class.
            </summary>
            <param name="proxy"> remoter object (SMP proxy)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Proxy">
            <summary>
            Remoter's proxy
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Microsoft#VisualStudio#ProjectServices#Hosting#ISMPLink#Proxy">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.EvaluatedIncludeEscaped">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.UnevaluatedValue">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.IsEnvironmentProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.IsGlobalProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.IsReservedProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.Predecessor">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyLink.IsImported">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#Project">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#EvaluatedIncludeEscaped">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#UnevaluatedValue">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#IsEnvironmentProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#IsGlobalProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#IsReservedProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#Predecessor">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectPropertyRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectPropertyRemoter#IsImported">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter">
            <summary>
            SMP implementation for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#LastEvaluationId">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#Xml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ThrowInsteadOfSplittingItemElement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#IsDirty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GlobalProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ItemTypes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ConditionedProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ItemDefinitions">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#Items">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ItemsIgnoringCondition">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#Imports">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ImportsIncludingDuplicates">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#AllEvaluatedProperties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#AllEvaluatedItemDefinitionMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#AllEvaluatedItems">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ToolsVersion">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#SubToolsetVersion">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#SkipEvaluation">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#DisableMarkDirty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#IsBuildEnabled">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ExpandString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetItems(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetItemsByEvaluatedInclude(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetItemsIgnoringCondition(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetLogicalProject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetProperty(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#GetPropertyValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#MarkDirty">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#ReevaluateIfNecessary">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#RemoveGlobalProperty(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#RemoveItem(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#RemoveItems(System.Collections.Generic.List{Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#RemoveProperty(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#SaveLogicalProject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#SetGlobalProperty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#SetProperty(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProjectRemoter.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectRemoter#Unload">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3">
             <summary>
             Base implementation for all remoter objects.
            
             we use this template trickery to workaround the C# generics limitation
             and simplify the multiple usage places.
            
             Basically every time code need to convert from "object" X to  remoter R,
             code would look like "X.Export()"
             and for going from remoter to (linked) object:
             R.Import()
            
             This will take care of everything ...
             </summary>
             <typeparam name="T">the actual msbuild type (aka Project)</typeparam>
             <typeparam name="R">the remoter interface (aka IProjectRemoter)</typeparam>
             <typeparam name="Impl">the remoter implementation class (aka SMPProjectRemoter)</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3.Info">
            <summary>
            Type discovery info
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3.Local">
            <summary>
            Exported msbuild object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3.RemotedObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3.Export(`0)">
            <summary>
            Export helper.
            </summary>
            <param name="local">object to remote</param>
            <returns>remoter</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase`3.Import(`1)">
            <summary>
            Import helper
            </summary>
            <param name="remoter">remoter object (a SMP proxy) </param>
            <returns>the local object to use (can be either "link" or actual object)</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase">
            <summary>
            Base remoter implementation class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.ActiveStubs">
            <summary>
            active stubs would represent number of unreleased client connections for this object.
            Since we preserve object identity we will only create single "valid" exported that will be used
            for all out-bound connections. THe refcount is used in ExportMap to ensure proper release when no
            client is active (Which will enable GC to collect it and also free our map slot)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.RemotedObject">
             <summary>
             The local object that we remoting.
             Note it is always our (actual) object.
            
             If we are required to export a "link" object, we do not create a remoter,
             instead we sent the proxy directly.
             this both increase perf - the client will talk directly to the source, eliminating the multiple hops,
             and also avoid deadlock prune circular remotings.
            
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.CollectionId">
            <summary>
            Remote collection id (for us this is process site - aka devenv.exe will be 0, PSHost.exe will be the site ID.
            If we are support multiple collection linking we can change that in the future.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.ExportId">
            <summary>
            Unique object ID.
            This is created the first time a object is remoted. It is associated with that object
            and is stable (no one can reuse it) until there is any client that has any hold on related "remote" object.
            We use the SMP proxy/stub release notifications to detect the time when this is no needed anymore and at that time
            we "release" the association.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.RemotedObjectType">
            <summary>
            The type of the object we remoting. We use the SMP Generated "InterfaceId" for the related IFooRemoter interface to identify that.
            This allow us to resolve up-casting with a fast integer switch() statement instead of expensive type discovery.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.OnStubCreate">
            <summary>
            Called when a client establish a remote connection to this object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.OnStubRelease">
            <summary>
            Called when a client connection is "released".
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <summary>
            Used by SMP stub object resolver interface for hierarchical objects.
            This will allow us to preserve inheritance by providing the actual objects hub.
            That would allow client to have fully transparent type casting and ensure object identity
            preservation.
            </summary>
            <param name="context">caller context (pass through)</param>
            <param name="callback">the resolving callback (implementation will call correct overload)</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ExportMap">
            <summary>
            Collection holding all elements that we "exported" and still being used by remote sites.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportMap.OnStubRelease(Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase)">
            <summary>
            Called when single usage of an object is dropped.
            </summary>
            <param name="remoter">released remoter object</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportMap.OnStubCreate(Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase)">
            <summary>
            Called when a remote connection is established.
            </summary>
            <param name="remoter">the remoter abject ref-ed</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportMap.TryGet(System.UInt32,System.Object@)">
            <summary>
            Used when we get a "remoted" back. We'll use export ID to get the actual object.
            </summary>
            <param name="id">object ID</param>
            <param name="o">the "local" object</param>
            <returns>true if we still hold that object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ExportMap.Export``1(``0,System.Func{``0,Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase})">
            <summary>
            Export an object of type T.
            Will check for already exported, if not will create a new ID and if not it will create a new remoter.
            </summary>
            <typeparam name="T">the msbuild type</typeparam>
            <param name="o">the instance</param>
            <param name="factory">remoter factory</param>
            <returns>remoter object to use.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ImportHelpers">
            <summary>
            Import "syntax sugar" helpers. Allows for a compact expression and also allow us to avoid type-lookups,
            and provide some "automated" type safety.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ImportHelpers.CreateLocal(Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase)">
            <summary>
            called by ImportMap when we need to create a MSBuild "view" object for the said remoter.
            Note that we might get multiple remoter object (we basically ge a new one on each cross-site call), but the ExportID
            object identity will be preserved. In that case we simply discard the additional remoters.
            </summary>
            <param name="remoter">remoter object (SMP proxy)</param>
            <returns>the msbuild "link" object</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ImportMap">
            <summary>
            Collection holding all imported (linked) object currently active in this process.
            The collection is per remote site (aka VS will have N of these for each PSHost processes, each PSHost.exe will also have N - 1 for VS and (N-1) for all other sites).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ImportMap.Remove(System.UInt32)">
            <summary>
            Called when a remoter proxy is collected.
            This means no code has reference to the linked object and
            we can remove the map entry
            </summary>
            <param name="key">the object ID</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ImportMap.ImportFast(Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase)">
             <summary>
             This is a faster way to "import" with a single lock.
             THe downside is that we call MSBuild create object API inside the lock and
             we technically don't control whats going on opening the door for reentrancy.
            
             Currently all MSbuild create object cases are extremely simple New Foo(link) { Link= link)
             And we can use the Fast way safely, but unless i see a desperate need for it will use the safer mode.
            
             Only keeping here so we dont loose the context ...
             </summary>
             <param name="remoter">remoter (proxy)</param>
             <returns>the "linked" msbuild object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ImportMap.Import(Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase)">
            <summary>
            Import a remote object for [tramsparent] consumption in our local MSBuild collection.
            </summary>
            <param name="remoter">remoter (proxy)</param>
            <returns>the "linked" msbuild object</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPLink">
            <summary>
            Helper interface implemented by all "Link" classes we use.
            The allow us to get access to actual "Remoter" used to create the link which we need in case we have to Export that "linked" object
            (can be either to another node, or pass back to a method or so).
            To avoid chain-remote, we want to pass original remoter instead creating a new one. This is now supported by SMP generator serialization code
            via "cross-site" proxies.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPLink.Proxy">
            <summary>
            Remoter object (it is always a SMP proxy)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException">
            <summary>
            Error related to remote collection linking in OOP
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException" /> class.
            </summary>
            <param name="message">error text</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException" /> class.
            </summary>
            <param name="message">error text</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildObjectModelRemotingException" /> class.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery">
             <summary>
             We need to know the actual type of ProjectElements in order to do a proper remoting.
             Unless we do some explicit ProjectElement.GetXMLType() thing we need to use heuristic.
            
             Most of the types has a single implementation, but few has a wrapper classes. They are also internal for MSbuild.
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass">
            <summary>
            Type class in msbuild API.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass.Container">
            <summary>
            Construction container. Derives from <see cref="T:Microsoft.Build.Construction.ProjectElementContainer" />
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass.Node">
            <summary>
            Construction node. Derives from <see cref="T:Microsoft.Build.Construction.ProjectElement" />
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass.Evaluation">
            <summary>
            Evaluation object
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass.All">
            <summary>
            All
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.ExportAny(System.Object)">
            <summary>
            Find the actual remotable type of an object and use correct remoting protocol.
            Accepts any MSbuild object
            </summary>
            <param name="local">local [msbuild] object</param>
            <returns>remoter for that object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.ExportElement(Microsoft.Build.Construction.ProjectElement)">
            <summary>
            Find the actual remotable type of an object and use correct remoting protocol.
            Accepts any MSbuild object
            </summary>
            <param name="local">local [msbuild] object</param>
            <returns>remoter for that object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.ExportContainer(Microsoft.Build.Construction.ProjectElementContainer)">
            <summary>
            Find the actual remotable type of an object and use correct remoting protocol.
            Only accept Container type objects.
            </summary>
            <param name="local">local [msbuild] object</param>
            <returns>remoter for that object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.ExportCanonical(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.MSBuildTypeClass)">
             <summary>
             Find the actual remotable type of an object and use correct remoting protocol.
             This will ensure the proper object is created on the client site.
            
             Note: this is always called under the ExportMap lock, so there is no race here
             (and therefore we can update maps freely)
            
             This way is significantly (10X+) times faster than going via type probing all the time
             (and 100+ times faster than via reflection).
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo">
            <summary>
            Help avoid using type probing / reflection when remoting object that we dont know the actual underlying type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo.#ctor(System.Type,System.Func{System.Type,System.Boolean},System.Func{System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo" /> class.
            </summary>
            <param name="type">canonical type (for Example "ProjectMetadata" it might be GlobalProjectPropertyImpl or LocalProjectPorpertyImpl but we alwyas remote via IProjectPropertyRemoter)</param>
            <param name="checker">a fast inheritance checker</param>
            <param name="factory">the actual remoter factory that will create the proper SMPtypeRemoter object</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo.Class">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo.Checker">
            <summary>
            Inheritance checker
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo.CanonicalType">
            <summary>
            Canonical MSBuild type for the object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.MSBuildTypeDiscovery.RemotableTypeInfo.Factory">
            <summary>
            Remoter factory
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker">
            <summary>
            Provide ability to export and import OM objects to another collections.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.SiteLinker">
            <summary>
            The one and only instance.
            For now - we only have one relevant project collection per site to link.
            GlobalProject collection in VS, and our ProjectCollection in each PSHost process)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.CollectionId">
            <summary>
            Collection "id" - we use the SMP site ID for this.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Collection">
            <summary>
            The actual local msbuild ProjectColleciton instance we work on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.LinkFactory">
            <summary>
            The per-collection root object for ObjectModelRemoting API.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Exported">
            <summary>
            Holds MSBuild object we exported away from our local collection
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.ProvideExternalProjects">
            <summary>
            Enable / disable enumeration of External "Project" objects inside our collection.
            Setting it to "true" in VS will allow any GlobalCollection consumers to see all projects we loaded outside VS
            via GlobalProjectCollection.LoadedProjects and GetLoadedProject(path).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Init(Microsoft.Build.Evaluation.ProjectCollection)">
            <summary>
            Ensure the per site exported is activeated.
            </summary>
            <param name="collection">local collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Import(Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase)">
            <summary>
            Import a "remoted" object by create a local equivalent type MSBuild object that act as a pass-through proxy to actual object that exists in
            some other MSBuild project collection (can be in the same process or other).
            </summary>
            <param name="remoter">the remoter object</param>
            <returns>local object representation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Export``1(``0,System.Func{``0,Microsoft.VisualStudio.ProjectServices.Hosting.ExportBase})">
            <summary>
            Create a remoter object for a local one.
            </summary>
            <typeparam name="T">The MSbuild type (when known)</typeparam>
            <param name="obj">the actual object (can be null)</param>
            <param name="factory">the remoter factory (used if we don't have a remoter created already)</param>
            <returns>the remoter interface to use (generally pass via SMP to whoever needs it)</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.GetLoadedProjects(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.Microsoft#VisualStudio#ProjectServices#Hosting#IProjectCollectionRemoter#GetLocalLoadedProjects(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectCollectionLinker.ClearAllRemotes">
            <summary>
            Clear all remotes, meaning clear the map.
            This will not break the object but will reset the object identity tracking.
            We might want to call this on SolutionClose().
            Technically we should not need it but can be a correct way to mitigate some GC lag / eventual leaks.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.CodeSite">
            <summary>
            Specify which exe uses generated code
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.CodeSite.PSHost">
            <summary>
            PSHost.exe
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.CodeSite.VSManaged">
            <summary>
            managed code in devenv.exe
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.CodeSite.VSNative">
            <summary>
            native code in devenv.exe
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.NativeTypeMarshalOptions">
            <summary>
            Native marshaling options for SMP
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.NativeTypeMarshalOptions.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.NativeTypeMarshalOptions.UseCString">
            <summary>
            Use CString native holder for "string". (Default is CComBSTR)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues">
            <summary>
            Special values handling, only applicable for read-only properties.
            Implies the value is immutable.
            Access to these is always resolved on client side.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.None">
            <summary>
            Not a special value
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.Fixed">
            <summary>
            Sent the property value together with proxy ID. This is only read one when proxy object is created.
            Note: All special properties are implicitly Fixed as well.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.SourceSite">
            <summary>
            Value is the siteID where real instance lives.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.SendingSite">
            <summary>
            Value is the siteID that provide the object (may be different than source site).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.SourceObjectId">
            <summary>
            The source site object ID.
            Note ID is unique per proxy/stub for now, not for object.
            We might consider adding a flag where SMP do preserve identit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.SendingObjectId">
            <summary>
            The sending side stub ID (ReleaseObjectID)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SpecialValues.InterfaceId">
            <summary>
            The interface id ((FooHostedInterfaces) enum).
            Note: we expect UInt16 type, since the FooHostedInterfaces is generated so it can not be used by interface definitions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SiteGenerationConstants">
            <summary>
            Constant definitions for generation
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SiteGenerationConstants.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SiteGenerationConstants" /> class.
            </summary>
            <param name="collection">collection name</param>
            <param name="isSMPhost">true = devenv, false = PSHost</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SiteGenerationConstants.Collection">
            <summary>
            Definition SMP collection name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SiteGenerationConstants.IsSMPhost">
            <summary>
            Definitions implementation site
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads">
            <summary>
            Specify the server site for the interfaces
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.CodeSite,System.Int32[])">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads" /> class.
            
             </summary>
             <param name="serverSite">implementation site[s]</param>
             <param name="svcThreads">logical servicing threads</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads.#ctor(System.UInt32,System.Int32[])">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads" /> class.
            
             </summary>
             <param name="serverSite">implementation site[s]</param>
             <param name="svcThreads">logical servicing threads</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads.ServerSite">
            <summary>
            Implementation site
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceServicingThreads.Threads">
            <summary>
            Servicing threads logical id's
            (these will be mapped to a SBM slots)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute">
            <summary>
            Auto gen marker for SMP marshaled interface
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.IsService">
            <summary>
            true  - server implementation is a singleton service object.
            false - server implementation is an object. (can be multiple instances, we have a notion of "remote this" build in to
                    mediate which instance the client will link.
                    If Interface implements IDisposable, the client shim will implement that as a "final release".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.NoRelease">
            <summary>
            (objects only).
            True: object id needs an explicit "release"
            False: do not need to be released explicitly
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.CrossSite">
            <summary>
            (objects only).
            True: Interface object can be passed from site to site.
            False: Interface object can only be obtained from implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.Client">
            <summary>
            Consumer site[s] (can be more than one)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.Server">
            <summary>
            Implementation site (currently can be only one)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.Abstract">
            <summary>
             Interface is "abstract", thats is, there will be never a proxy or stub for this interface "as is".
             only inherited interfaces are actual object and should be transmitted.
             Implementation will be required to implement a "resolver", and generated code will enforce that.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.ServiceCollection">
            <summary>
            to support multiple independent set of connected interfaces (aka second sent of hosts.exe - for tests, cmdline tools, etc)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.ClassName">
            <summary>
            Optional, the name of the generated implementation class. Default is the interface name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.OnProxyRelease">
            <summary>
            Optional add integrate public Action OnRelease { get; set; } property to the Interface proxy.
            The value is the property name.
            The non - null Action will be invoked when Proxy is finalized (meaning no more used by current process).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.AdditionalNamesapces">
            <summary>
            Additional namespace to inject in the generated wrappers (';' separated string.
            Not used for now. (assuming the generator can figure out this correctly by itself).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceAttribute.NativeMarshaling">
            <summary>
            Native marshaling options. These apply for all default types in Methods / Properties from this interface.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.AutoSerializeAttribute">
            <summary>
            Auto gen marker for a data structure to generate
            SerializationHelper reader/writer.
            All public properties and fields are serialized.
            They need to be SMP serializable as well.
            Class need to have an argumentless new().
            Base class will be included in serialization if is either marked with autogenerate attribute or
            implement's IPipeSerialize. Otherwise will be ignored.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.AutoSerializeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.AutoSerializeAttribute" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.AutoSerializeAttribute.SupportNull">
            <summary>
            Whether null objects can be transmitted
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.AutoSerializeAttribute.NativeMarshaling">
            <summary>
            Native marshaling options. These apply for all default types in Members / Properties from this class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceMethodAttribute">
            <summary>
            Auto gen options for interface methods
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceMethodAttribute.NoWait">
            <summary>
            Proxy wont wait on function completion.
            (effective only for void functions with no out parameters, or property setter).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceMethodAttribute.Fixed">
            <summary>
            (only for read-only properties)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceMethodAttribute.OnStubCreate">
            <summary>
            Can be applied only on "void Foo();" methods.
            That method will not be transmitted, but instead will be called when a stub associated with the instance is created.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceMethodAttribute.OnStubRelease">
            <summary>
            Can be applied only on "void Foo();" methods.
            That method will not be transmitted, but instead will be called when a stub associated with the instance is released.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceParamAttribute">
            <summary>
            Auto gen options for interface methods
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedInterfaceParamAttribute.DictinaryComparer">
            <summary>
            For  dictionary types. Use that comparer when de-serializing the value on the remote site instead of default one..
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.CommonProjectLoadData">
            <summary>
            Commonly used during load project evaluation data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.CommonProjectLoadData.ShowAll">
            <summary>
            Show all mode for project
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.CommonProjectLoadData.EvaluatedProperties">
             <summary>
             Evaluated properties values commonly used during project load
             Note the collection here is a ordered list of EvaluatedProperty values.
             There caller provides a list of property names, and  each value match the name with the same index.
             if property is not present in the file the value is null.
            
             We don't use the KeyValuePair here to save bandwidth.
             Usually the "names" string is actually larger (by aggregated string size).
            
             For large solution this is multiple MB's saved for SMP transfers (and related serialization/deserialization).
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo">
            <summary>
            Initial project data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.Error">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.BaseTypeGuid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.AggregateTypeGuid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.Flavors">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.OutputAssembly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.ProjectFileFormat">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.UserFileFormat">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.References">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo.AddP2P(System.Guid@)">
            <summary>
            Add a p2p ref in reference collection
            </summary>
            <param name="refId">project guid</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectItem">
            <summary>
            base project item data used on load
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectItem.FinalItemSpec">
            <summary>
            Final item spec (aka file name or relative path).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectItem.MsBuildItem">
            <summary>
            Item object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem">
            <summary>
            File item data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.ItemType">
            <summary>
            MSBuild Item type
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.SubType">
            <summary>
            Subtype if present
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.Generator">
            <summary>
            Generator name if any
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.CustomToolNS">
            <summary>
            Generator namespace
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.LastGenOutput">
            <summary>
            Last file output
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.Link">
            <summary>
            The logical path of a linked item.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.DependencyParent">
            <summary>
            DependsOn
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.ContainingProjectFilePath">
            <summary>
            [imported] project that defined this item
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.IsDesignTime">
            <summary>
            Is design time property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.IsDesignTimeShared">
            <summary>
            Is design time property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.IsAutoGen">
            <summary>
            Autogen property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchProjectFileItem.CopyToBinDir">
            <summary>
            Copy to output options
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference">
            <summary>
            WebReference items
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.RelPath">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.UrlBehavior">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.UpdateFromUrl">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.ServiceLocationUrl">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.CachedDynamicPropName">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.CachedAppSettingsObjectName">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchWebReference.CachedSettingsPropName">
            <summary>
            Web reference properties
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchServiceReference">
            <summary>
            Service Reference items
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchServiceReference.StorageType">
            <summary>
            Service reference properties
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData">
            <summary>
            File section data record used by prefetch load to batch bunch of evaluation data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.HasPublishFile">
            <summary>
             project contains a publishing file
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.SharedProjectsList">
            <summary>
             shared imports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.AvailableItemTypes">
            <summary>
             item types
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.Files">
            <summary>
            File items collection
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.Folders">
            <summary>
            Project folders
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.WebReferencesFolders">
            <summary>
            Web reference folders
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.WebReferences">
            <summary>
            Web references
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.ServiceReferencesFolders">
            <summary>
            Service reference folders
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.ServiceReferences">
            <summary>
            Service references
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData.ConnectedServices">
            <summary>
            Connected service references
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.GenerationConstants">
            <summary>
            Generation constants used for Project services SMP infrastructure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.GenerationConstants.OOPPSServiceCollection">
            <summary>
            connection manager class name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.PSHostChannels">
            <summary>
            Named servicing channels [threads] we currently use for Project services to distribute different work flow implementations
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PSHostChannels.PSHostSTA">
            <summary>
            General purpose single thread (1) in PSHost.exe
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PSHostChannels.PSHostLoadAndEvaluation">
            <summary>
            Load and evaluation servicing thread. (PSHost.exe)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PSHostChannels.PSHostBuild">
            <summary>
            Build servicing thread. (PSHost.exe)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.PSHostChannels.PSHostMTA">
            <summary>
            General purpose many threads (1+) (PSHost.exe)
            Note "-3" notations means that this will occupy slot 3 through "Number of slots".
            By default we will create exactly 4 slots, so that will actually be serviced by (1) thread.
            But it is Nuber of slots is parameter for project SMP and we can use it to experiment with the size of
            "MTA thread pool" to see if we get a benefit if increase "per node' parallelism. Therefore all interfaces
            that associate with PSHostMTA declare that they are multi-tread ready.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.DevEnvChannels">
            <summary>
            Named servicing channels [threads] we currently use to support calls from PSHost process  to Devenv.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.DevEnvChannels.VSManagedCallback">
            <summary>
            VS callback service
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedBuildProperty">
            <summary>
            OOP hosted IBuildItemGroup.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedBuildProperty.FinalValue">
            <summary>
            Final evaluated value for the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedBuildProperty.IsImported">
            <summary>
            true if it is coming from imported project
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedImportItem">
            <summary>
            OOP hosted Import item accessor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedImportItem.ProjectFilePath">
            <summary>
            IImportItem.ProjectFilePath
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedImportItem.Condition">
            <summary>
            IImportItem.Condition
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedImportItem.Label">
            <summary>
            IImportItem.Label
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem">
            <summary>
            OOP hosted MSbuild item accessor.
            TBD: For now we are keeping with the ProjectShim original approach to
            bundle "BuildItem" for both EvaluatedItems and TaskItems.
            Fundamentally that is wrong, but it is done for "convenience"
            and since we try to minimize the code impact on CSProj we stick to it
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.FinalItemSpec">
            <summary>
            IBuildItem.FinalItemSpec
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.ContainingProjectFilePath">
            <summary>
            IBuildItem.ContainingProjectFilePath
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.Name">
            <summary>
            IBuildItem.Name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.IsImported">
            <summary>
            IBuildItem.IsImported
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.Condition">
            <summary>
            IBuildItem.Condition
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.SetMetadata(System.String,System.String)">
            <summary>
            IBuildItem.SetMetadata
            </summary>
            <param name="metadataName">name</param>
            <param name="metadataValue">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.SetMetadataLiteral(System.String,System.String)">
            <summary>
            IBuildItem.SetMetadataLiteral
            </summary>
            <param name="metadataName">name</param>
            <param name="metadataValue">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.RemoveMetadata(System.String)">
            <summary>
            IBuildItem.RemoveMetadata
            </summary>
            <param name="metadataName">name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.SetIncludeLiteral(System.String)">
            <summary>
            IBuildItem.SetIncludeLiteral
            (aka :  <Reference Include="value" />
            </summary>
            <param name="include">include attribute value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.CopyCustomMetadataTo(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem)">
            <summary>
            IBuildItem.CopyCustomMetadataTo.
            TODO: this need some generator serialization work (to pass proxy back to the server).
            </summary>
            <param name="destinationItem">item to update</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.GetMetadata(System.String,System.String@)">
            <summary>
            IBuildItem.GetMetadata
            </summary>
            <param name="metadataName">name</param>
            <param name="value">metadata value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.GetEvaluatedMetadata(System.String,System.String@)">
            <summary>
            IBuildItem.GetEvaluatedMetadata
            </summary>
            <param name="metadataName">name</param>
            <param name="value">metadata value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem.RemoveFromProject">
            <summary>
            Remove that item from the project
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup">
            <summary>
            OOP hosted IBuildItemGroup.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup.Condition">
            <summary>
            IBuildItemGroup.Condition
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup.AddNewItemLiteral(System.String,System.String,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem@)">
            <summary>
            IBuildItemGroup.AddNewItemLiteral
            </summary>
            <param name="itemName">new item name</param>
            <param name="itemInclude">new item include</param>
            <param name="item">item object</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup.RemoveItem(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem)">
            <summary>
            IBuildItemGroup.RemoveItem
            </summary>
            <param name="item">item to remove</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup.GetItems(System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem}@)">
            <summary>
            IBuildItemGroup.GetEnumerator replacement.
            </summary>
            <param name="items">items contained by this group</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollection">
            <summary>
            OOP hosted support for IBuildItemGroupCollection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollection.GetItems(System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup}@)">
            <summary>
            IBuildItemGroupCollection.GetEnumerator replacement.
            </summary>
            <param name="items">item groups contained</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup">
            <summary>
            OOP hosted IBuildItemGroup.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.Condition">
            <summary>
            Group condition
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.IsImported">
            <summary>
            Is it declared in imported project/target
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.SetProperty(System.String,System.String)">
            <summary>
            Set a property value
            </summary>
            <param name="propertyName">name</param>
            <param name="propertyValue">evaluated value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.SetPropertyLiteral(System.String,System.String)">
            <summary>
            Set a property value
            </summary>
            <param name="propertyName">name</param>
            <param name="propertyValue">raw value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.RemovePropertyByName(System.String)">
            <summary>
            Delete a property.
            </summary>
            <param name="propertyNameToRemove">name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.GetProperty(System.String,Microsoft.VisualStudio.ProjectServices.Hosting.HostedBuildProperty@)">
            <summary>
            Get the property value
            </summary>
            <param name="propertyName">name</param>
            <param name="pRetVal">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup.AddNewProperty(System.String,System.String)">
            <summary>
            Add a new property
            </summary>
            <param name="propertyName">name</param>
            <param name="propertyValue">value</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection">
            <summary>
            OOP hosted support for IBuildPropertyGroupCollection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection.GetItems(System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup}@)">
            <summary>
            IBuildPropertyGroupCollection.GetEnumerator replacement.
            </summary>
            <param name="items">item groups contained</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService">
            <summary>
            OOP hosted build service
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.SetProjectConfigrationTable(System.String)">
            <summary>
            Specify the current solution configuration xml property.
            MSbuild needs that via property "CurrentSolutionConfigurationContents" = value of the SolutionConfiguration XML fragment text.
            </summary>
            <param name="slnXmlBlob">contents of SolutionConfiguration XML</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.BeginBuildBatch(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Begin build process
            </summary>
            <param name="globalPropertiesToSet">Global properties for the build to set before build</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.EndBuildBatch">
            <summary>
            End build
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.CancelBuildBatch">
            <summary>
            Cancel build
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.StartBuildProject(System.UInt32,System.String,System.Boolean)">
            <summary>
            Start build of project
            </summary>
            <param name="projectId">local project id</param>
            <param name="pszTargetName">list of targets separated by semicolon</param>
            <param name="realBuild">is this real build</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.StartIntelisenseBuild(System.UInt32)">
            <summary>
            Start intellisense build
            </summary>
            <param name="projectId">local project id</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.AddHostLogger(System.UInt32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback)">
            <summary>
            Add host logger
            </summary>
            <param name="projectId">local project id</param>
            <param name="verbosity">level of verbosity</param>
            <param name="loggerCallback">logger callback</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.CreateExternalMuxLogger(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates external Mux MSBuild logger to use it for register external loggers
            </summary>
            <param name="switchParameters">Switch parameters</param>
            <param name="verbosity">Verbosity level</param>
            <param name="includeEvaluationProfiles">Is include evaluation profiles</param>
            <param name="includeTaskInputs">Is include task inputs</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService.AddExternalHostLogger(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger)">
            <summary>
            Add external hosted logger shim for the specific project
            </summary>
            <param name="projectId">internal project id</param>
            <param name="hostedLoggerShim">Aggregated project logger shim</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine">
            <summary>
            OOP hosted IEngine.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine.OnlyLogCriticalEvents">
            <summary>
            Sets value for logging critical events only
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine.UnregisterAllLoggers">
            <summary>
            Unregister all registered loggers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine.UnloadAllProjects">
            <summary>
            Unload all projects
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger">
            <summary>
            Hosted logger interface
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Verbosity">
            <summary>
            Return aggregated Verbosity
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.SubscribedEvents">
            <summary>
            Returns aggregated list of subscribed events separated by semicolon
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Log(System.Byte[])">
            <summary>
            Log a message
            </summary>
            <param name="serializedBuildEventArgs">Serialized build event args</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Shutdown">
            <summary>
            Shutdown logger, MSBuild is done with its work
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback">
            <summary>
            Notification callback for loggers PSHost operations
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.LogTextMessage(System.String)">
            <summary>
            Log a text message
            </summary>
            <param name="message">Logged message</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.BeginLogging">
            <summary>
            Begin logging
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.LogFormattedMessage(System.Int32,System.Byte[])">
            <summary>
            Log a message
            </summary>
            <param name="verbosity">Verbosity level</param>
            <param name="serializedBuildEventArgs">Serialized build event args</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.Shutdown">
            <summary>
            Shutdown logger, MSBuild is done with its work
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback">
            <summary>
            Notification callback for non-blocking PSHost operations
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.LoadAndEvaluationCompleted(System.Int32,System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <summary>
            Called after <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.LoadProject(Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest)" />
            </summary>
            <param name="site">PSHost exe site that calls back</param>
            <param name="projectId">session specific project id (set by project service)</param>
            <param name="result">the operation outcome</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.ReevaluateProjectCompleted(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <summary>
            Called after <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.ReevaluateProject(System.UInt32,System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
            </summary>
            <param name="projectId">session specific project id (set by project service)</param>
            <param name="result">the operation outcome</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.OnBuildCompleted(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <summary>
            Called after build is completed
            </summary>
            <param name="projectId">session specific project id (set by project service)</param>
            <param name="success">Whether build was succeeded or not</param>
            <param name="result">the operation outcome</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.OnIntelisenseBuildReady(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult,System.Byte[])">
             <summary>
             Result of DT build serialized to standard compiler cache format (same as DTBB and original suo cache).
            
             </summary>
             <param name="projectId">session specific project id (set by project service)</param>
             <param name="success">Whether build was succeeded or not</param>
             <param name="result">the operation outcome</param>
             <param name="resultsBlob">compiler data (includes roslyn initialization info as well as reference resolution info"</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim">
            <summary>
            OOP hosted MSbuild project accessor
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ProjectId">
            <summary>
            Project id (assigned by OOPEval).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.FullFileName">
             <summary>
             virtual HRESULT __stdcall put_FullFileName(BSTR pRetVal) = 0;
             virtual HRESULT __stdcall get_FullFileName(BSTR* pRetVal) = 0;
            
             Get /set project's full file path.
             </summary>
             <returns>HRESULT</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.IsDirty">
             <summary>
             virtual HRESULT __stdcall get_IsDirty(VARIANT_BOOL* pRetVal) = 0;
            
             Project dirty state
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.TimeOfLastDirty">
             <summary>
             virtual HRESULT __stdcall get_TimeOfLastDirty(DATE* pRetVal) = 0;
            
             Last time the project file is edited since load
             VS only use that to compare with previous value.
             So the only important requirement is to keep  the relation
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ProjectFileEncoding">
             <summary>
             virtual HRESULT __stdcall get_ProjectFileEncoding(enum ProjectFileEncoding * pRetVal) = 0;
            
             Get project's file name encoding.
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ToolsVersion">
             <summary>
             virtual HRESULT __stdcall put_ToolsVersion(BSTR pRetVal) = 0;
             virtual HRESULT __stdcall get_ToolsVersion(BSTR* pRetVal) = 0;
            
             Gets tools version
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.HasToolsVersionAttribute">
             <summary>
             virtual HRESULT __stdcall get_HasToolsVersionAttribute(VARIANT_BOOL* pRetVal) = 0;
            
             Gets indication whether project tag in file actually has the ToolsVersion attribute.
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.IsInProcBuildAllowed">
             <summary>
             virtual HRESULT __stdcall put_IsInProcBuildAllowed(VARIANT_BOOL pRetVal) = 0;
             virtual HRESULT __stdcall get_IsInProcBuildAllowed(VARIANT_BOOL * pRetVal) = 0;
            
             This should not be needed by OOP!!
             Gets indication whether InProc build is allowed.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetItemGroups(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollection@)">
            <summary>
            virtual HRESULT __stdcall get_ItemGroups(IBuildItemGroupCollection** pRetVal) = 0;
            Read-only accessor for the raw item groups of this project.
            This is essentially a reflection of the data in the XML for this
            project's items as well as any imported projects.
            </summary>
            <param name="itemGroups">item groups</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedProjectItemsByName(System.String,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup@)">
             <summary>
             virtual HRESULT __stdcall GetEvaluatedProjectItemsByName(BSTR itemName, VARIANT_BOOL readOnly, struct IBuildItemGroup * * pRetVal) = 0;
             Retrieves a group of evaluated items of a particular item type.
             Note, VS always use readonly == true, and by implementation of the MSbuildShim, there is no possible support for readonly = false, so
             we don't need to have that parameter.
            
             </summary>
             <param name="itemName">item type</param>
             <param name="items">collection of ALL items with that item type. note this will never include items created by targets.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedItemsByEvaluatedInclude(System.String,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup@)">
             <summary>
             virtual HRESULT __stdcall GetEvaluatedItemsByEvaluatedInclude(BSTR evaluatedInclude, struct IBuildItemGroup * * pRetVal) = 0;
             Gets all items that have the given evaluated Include attribute.
             Used by VS to get shared imports
            
             </summary>
             <param name="evaluatedInclude">absolute path (include)</param>
             <param name="items">collection of ALL items with that item type. note this will never include items created by targets.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedItemsByNameIgnoringCondition(System.String,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup@)">
             <summary>
             virtual HRESULT __stdcall GetEvaluatedItemsByNameIgnoringCondition(BSTR itemName, IBuildItemGroup** pRetVal) = 0;
            
             Gets all msbuild items regardless if "Condition" parameter is true or false.
             This is a controversial feature of CSProj system, since originally (before MSBuils) all "Items" were "configuration independent"
             </summary>
             <param name="itemName">item name</param>
             <param name="value">item collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedItemsIgnoringCondition(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup@)">
             <summary>
             virtual HRESULT __stdcall get_EvaluatedItemsIgnoringCondition(struct IBuildItemGroup * * pRetVal) = 0;
             Technically not needed for OOP, but it is easier to implement than to discover.
            
             </summary>
             <param name="value">item collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.AddNewItemLiteral(System.String,System.String,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem@)">
             <summary>
             virtual HRESULT __stdcall AddNewItemLiteral(BSTR itemName, BSTR itemInclude, IBuildItem** pRetVal) = 0;
             Adds a new item to the project, and treats the Include path as a literal string,
             meaning that any special characters will be escaped so that they don't get used
             in MSBuild's parsing/expansion logic.
            
             </summary>
             <param name="itemName">item type</param>
             <param name="itemInclude">raw include</param>
             <param name="newItem">the new item</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.RemoveItemGroupsWithMatchingCondition(System.String)">
            <summary>
            virtual HRESULT __stdcall RemoveItemGroupsWithMatchingCondition(BSTR Condition) = 0;
            Removes all ItemGroup's from the main project file that have a
            specific "Condition".  This will not remove any item groups from
            imported project files.
            VS DOES use this, when configurations are removed.
            </summary>
            <param name="condition">condition value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.RemoveItemsByName(System.String)">
             <summary>
             virtual HRESULT __stdcall RemoveItemsByName(BSTR itemName) = 0;
             Removes all items of a particular type from the main project file.
             A strange functionality used only for "Folder" item type.
            
             </summary>
             <param name="itemName">item type</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetPropertyGroups(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection@)">
             <summary>
             virtual HRESULT __stdcall get_PropertyGroups(IBuildPropertyGroupCollection** pRetVal) = 0;
            
             Gets hosted property groups collection
             </summary>
             <param name="groups">project file PropertyGroups elements</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedProperties(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup@)">
             <summary>
             virtual HRESULT __stdcall get_EvaluatedProperties(IBuildPropertyGroup** pRetVal) = 0;
            
             Gets list of evaluated properties for the project.
             </summary>
             <param name="evaluatedProps">get evaluated properties collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.AddNewPropertyGroup(System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup@)">
             <summary>
             virtual HRESULT __stdcall AddNewPropertyGroup(VARIANT_BOOL insertAtEndOfProject, IBuildPropertyGroup** pRetVal) = 0;
            
             Adds new property group
             </summary>
             <param name="insertAtEndOfProject">Add property group at the end</param>
             <param name="newItem">Return new created item</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetVirtualProperty(System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall SetVirtualProperty(BSTR Name, BSTR Value) = 0;
            
             Set virtual property.
             </summary>
             <param name="propertyName">Property name</param>
             <param name="propertyValue">Property value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.RemovePropertyGroupsWithMatchingCondition(System.String)">
            <summary>
            virtual HRESULT __stdcall RemovePropertyGroupsWithMatchingCondition(BSTR Condition) = 0;
            </summary>
            <param name="condition">Condition</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetPropertyAt(System.String,System.String,System.String,System.UInt32)">
            <summary>
            virtual HRESULT __stdcall SetPropertyAt(BSTR propertyName, BSTR propertyValue, BSTR Condition, enum PropertyPositionShim position) = 0;
            </summary>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
            <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetPropertyLiteralAt(System.String,System.String,System.String,System.UInt32)">
            <summary>
            virtual HRESULT __stdcall SetPropertyLiteralAt(BSTR propertyName, BSTR propertyValue, BSTR Condition, enum PropertyPositionShim position) = 0;
            </summary>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
            <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetImportedPropertyAt(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim,System.String,System.String,System.String,System.UInt32)">
            <summary>
            virtual HRESULT __stdcall SetImportedPropertyAt(BSTR propertyName, BSTR propertyValue, BSTR Condition, struct IProject * importedProject, enum PropertyPositionShim position) = 0;
            Used to set property in User file and ensure it is created if needed
            </summary>
            <param name="importedProject">imported shim (user file)</param>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
            <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetImportedPropertyLiteral(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim,System.String,System.String,System.String)">
            <summary>
            Used to set property in User file and ensure it is created if needed
            </summary>
            <param name="importedProject">imported shim (user file)</param>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetImportedPropertyLiteralAt(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim,System.String,System.String,System.String,System.UInt32)">
            <summary>
            Used to set property in User file and ensure it is created if needed
            </summary>
            <param name="importedProject">imported shim (user file)</param>
            <param name="propertyName">Property name</param>
            <param name="propertyValue">Property value</param>
            <param name="condition">Condition</param>
            <param name="position">Position</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetGlobalProperties(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup@)">
             <summary>
             virtual HRESULT __stdcall get_GlobalProperties(IBuildPropertyGroup** pRetVal) = 0;
            
             projects global properties connection.
             </summary>
             <param name="value">global collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetEvaluatedProperty(System.String,System.String@)">
             <summary>
             virtual HRESULT __stdcall GetEvaluatedProperty(BSTR propertyName, BSTR* pRetVal) = 0;
            
             Get an evaluated value of a property
             </summary>
             <param name="propertyName">name of m</param>
             <param name="value">evaluated value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetProperty(System.String,System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall SetProperty(BSTR propertyName, BSTR propertyValue, BSTR Condition) = 0;
            
             Create a new, or change a value of existing property element
             </summary>
             <param name="propertyName">name of m</param>
             <param name="propertyValue">the [new] value</param>
             <param name="condition">condition expression</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetPropertyLiteral(System.String,System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall SetPropertyLiteral(BSTR propertyName, BSTR propertyValue, BSTR Condition) = 0;
            
             Create a new, or change a value of existing property element
             </summary>
             <param name="propertyName">name of m</param>
             <param name="propertyValue">the [new] value</param>
             <param name="condition">condition expression</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetConditionedPropertyValues(System.String,System.Collections.Generic.IReadOnlyCollection{System.String}@)">
             <summary>
             virtual HRESULT __stdcall GetConditionedPropertyValues(BSTR propertyName, SAFEARRAY * * pRetVal) = 0;
            
             Get the existing value for a "conditional" variable
             Typically used for "$(Configuration)" and "$(Platform)"
             Note this is inherently "heuristic" and the underlying MSbuild function will consider very limited
             condition patterns to look at.
             Pretty much the only expectations is it will resolve the values from
             '$(Configuration)|$(Platform)' = 'Debug|AnyCPU'
             (in above case that will yield a value of "Debug" for $(Configuration) and "AnyCPU" for $(Platform)
             </summary>
             <param name="propertyName">the name of "conditional" property</param>
             <param name="values">receives all currently existing values for the specified property</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetImportItems(System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.Hosting.HostedImportItem}@)">
             <summary>
             virtual HRESULT __stdcall get_ImportItems(SAFEARRAY** pRetVal) = 0;
             virtual HRESULT __stdcall GetImports(SAFEARRAY** importLocations, SAFEARRAY** importConditions) = 0;
            
             </summary>
             <param name="imports">imports collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.AddNewImport(System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall AddNewImport(BSTR importLocation, BSTR importCondition) = 0;
            
             </summary>
             <param name="importLocation">import file</param>
             <param name="importCondition">condition</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.AddOrUpdateImport(System.String,System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall AddOrUpdateImport(BSTR fullPath, BSTR Condition, BSTR Label) = 0;
            
             </summary>
             <param name="fullPath">import file</param>
             <param name="condition">import condition</param>
             <param name="label">import label</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ReloadProjectExtensionsImports">
             <summary>
             virtual HRESULT __stdcall ReloadProjectExtensionsImports() = 0;
            
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.RemoveImport(System.String,System.String)">
             <summary>
             virtual HRESULT __stdcall RemoveImport(BSTR projectFile, BSTR Condition) = 0;
             Remove a new "Import" element from the import collection.
            
             </summary>
             <param name="projectFile">Unevaluated path (as in old MSbuild OM)</param>
             <param name="condition">import condition</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.RemoveImportIgnoringCondition(System.String)">
             <summary>
             virtual HRESULT __stdcall RemoveImportIgnoringCondition(BSTR fullPath) = 0;
            
             </summary>
             <param name="fullPath">import full path</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ReplaceImport(System.String,System.String,System.String,System.String,System.Boolean@)">
             <summary>
             virtual HRESULT __stdcall ReplaceImport(BSTR oldImportLocation, BSTR oldCondition, BSTR newImportLocation, BSTR newCondition, VARIANT_BOOL* pRetVal) = 0;
             Replaces the path of and existing "Import" element to point to the new location.
            
             </summary>
             <param name="oldImportLocation">old unevaluated include</param>
             <param name="oldCondition">old condition</param>
             <param name="newImportLocation">new unevaluated include</param>
             <param name="newCondition">new condition</param>
             <param name="replaced">there was an import to update</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ReevaluateIfNecessary">
             <summary>
             virtual HRESULT __stdcall ReevaluateIfNecessary() = 0;
            
             Reevaluate the project (if anything has changed).
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.MarkProjectAsDirty">
            <summary>
            virtual HRESULT __stdcall MarkProjectAsDirty() = 0;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.Save(System.String)">
            <summary>
            virtual HRESULT __stdcall Save(BSTR projectFileName) = 0;
            </summary>
            <param name="projectFileName">Project file name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SaveWithEncoding(System.String,System.UInt32)">
            <summary>
            virtual HRESULT __stdcall SaveWithEncoding(BSTR projectFileName) = 0;
            </summary>
            <param name="projectFileName">Project file name</param>
            <param name="encoding">File encoding, from ProjectFileEncoding enum</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.Unload">
            <summary>
            virtual HRESULT __stdcall Unload() = 0;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetTargets(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollection@)">
             <summary>
             virtual HRESULT __stdcall get_Targets(ITargetCollection** pRetVal) = 0;
            
             Gets Targets.
             </summary>
             <param name="value">target collection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetProjectExtensions(System.String,System.String@)">
            <summary>
            virtual HRESULT __stdcall GetProjectExtensions(BSTR id, BSTR* pRetVal) = 0;
            </summary>
            <param name="id">extension name</param>
            <param name="value">xml content</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.SetProjectExtensions(System.String,System.String)">
            <summary>
            virtual HRESULT __stdcall SetProjectExtensions(BSTR id, BSTR xmlText) = 0;
            </summary>
            <param name="id">extension name</param>
            <param name="xmlText">xml content</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.Escape(System.String,System.String@)">
            <summary>
            virtual HRESULT __stdcall Escape(BSTR input, BSTR* pRetVal) = 0;
            </summary>
            <param name="input">Input string to escape</param>
            <param name="output">Result string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetFileSection(Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData@)">
            <summary>
            Get aggregated info for project items
            </summary>
            <param name="fileSection">file section data (as used by prefetch)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetInitalProperties(System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String}@,System.Collections.Generic.IReadOnlyCollection{System.String}@)">
            <summary>
            Get initial property map values.
            CSProj has a static list of "important" properties that will read on load
            To minimize the interop / oop calls, prefetch use the bulk get for that purpose.
            </summary>
            <param name="evaluatedPropertyNames">names of properties that CSProj needs evaluate values</param>
            <param name="unevaluatedPropertyNames">names of properties that CSProj needs unevaluate values</param>
            <param name="evaluatedValues">returned evaluated values. It is expected this will be same size as passed names</param>
            <param name="unevaluatedValues">returned unevaluated values. It is expected this will be same size as passed names</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.ResolveAssemblyPathsInTargetFx2(System.Collections.Generic.IReadOnlyCollection{System.String},System.Int32,System.Boolean,System.Collections.Generic.IReadOnlyCollection{System.String}@,System.Collections.Generic.IReadOnlyCollection{System.String}@,System.Int32@)">
            <summary>
            virtual HRESULT __stdcall ResolveAssemblyPathsInTargetFx2(LPWSTR* assemblySpecs, unsigned long noOfAssembliesToResolve,
                    VARIANT_BOOL ignoreVersionForFrameworkReferences, SAFEARRAY* originalAssemblySpecs,
                    SAFEARRAY* resolvedAssemblyPaths, unsigned long* noOfResolvedAssemblyPaths) = 0;
            (PDTAR)
            Resolves the assembly reference paths for the passed in assemblies in the given target fx
            </summary>
            <param name="assemblySpecs">array of strings containing the list of assembly specs that need to be resolved</param>
            <param name="noOfAssembliesToResolve">no of assembly specs passed in 'assemblySpecs'</param>
            <param name="ignoreVersionForFrameworkReferences">Should version be ignopred when resolving a framework 'assemblySpec'</param>
            <param name="originalAssemblySpecs">in_out array containing the original assembly specs passed in,
                        the caller needs to pre-allocate this array for 'noOfAssembliesToResolve' elements
            </param>
            <param name="resolvedAssemblyPaths">in_out array containing the resolved assembly paths ,
                        the entries corresponds to the originalAssemblySpecs entries for the same index;
                        the caller needs to pre-allocate this array for 'noOfAssembliesToResolve' elements.
            </param>
            <param name="noOfResolvedAssemblyPaths">no of resolved assembly paths in the 'resolvedAssemblyPaths' output array</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim.GetMSBuildEngine(Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine@)">
            <summary>
            virtual HRESULT __stdcall get_ParentEngine(IEngine** pRetVal) = 0;
            Gets engine for the adding/removing logging and other IEngine implementation
            </summary>
            <param name="engine">Out property</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService">
            <summary>
            OOP hosted projects data service
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService.GetProjectShims(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim@,Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim@,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.CommonProjectLoadData@)">
            <summary>
            Get project shim interfaces
            </summary>
            <param name="projectId">hosted project session unique ID</param>
            <param name="projectShim">project file msbuild remote object</param>
            <param name="userShim">user file msbuild remote object</param>
            <param name="preloadPropertiesListId">properties to read</param>
            <param name="loadData">prepared ahead evaluation data</param>
            <returns>success</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService.GetFileSection(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchFileSectionData@)">
            <summary>
            Get aggregated info for project items
            </summary>
            <param name="projectId">hosted project session unique ID</param>
            <param name="fileSection">file section data (as used by prefetch)</param>
            <returns>project items</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService.GetOpenProjectInfo(System.UInt32,System.Guid,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.PrefetchOpenProjectInfo@)">
            <summary>
            Get initial data to bootstrap prefetch process.
            </summary>
            <param name="projectId">hosted project session unique ID</param>
            <param name="factoryId">project factory used for this project</param>
            <param name="vsMaxSupportedVersion">max supported VS version (normally current +1)</param>
            <param name="projectOpenInfo">initial prefetch info for project</param>
            <returns>success</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService.GetPartialIntellisense(System.UInt32,System.Byte[]@)">
            <summary>
            PPL support.
            Get partial intellisense from project evaluation.
            </summary>
            <param name="projectId">hosted project session unique ID</param>
            <param name="data">intellisense blob</param>
            <returns>success</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService.RegisterOrderedPropertyList(System.Collections.Generic.IReadOnlyCollection{System.String},System.Int32@)">
             <summary>
             Register a string list of property names.
             Used in cases of build properties read where multiple projects will use the exact same list (like all C# properties will read the exact same predefined configuration properties list).
             So we prevent sending a long arrays of string for each project. (with associated allocations/dealocations/SMP transmits).
             A small but useful optimization for @scale solutions.
            
             </summary>
             <param name="propertyNames">list with fixed property names, the order is important</param>
             <param name="listId">the id, that can be used later instead of this string list.</param>
             <returns>success</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollection">
            <summary>
            OOP hosted ITargetCollection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollection.Exists(System.String,System.Boolean@)">
            <summary>
            IHostedTargetCollection.Exists
            </summary>
            <param name="targetName">name of the target</param>
            <param name="exists">result</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService">
            <summary>
            Load and evaluation OOP service
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.LoadProject(Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest)">
            <summary>
            Load and evaluate a project.
            Will call back when it is done.
            </summary>
            <param name="loadRequest">details for project to load</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.ReevaluateProject(System.UInt32,System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Reevaluate project with new set of properties
            </summary>
            <param name="projectId">host assigned project id</param>
            <param name="props">evaluation properties</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.CloseAll">
            <summary>
            Close all projects and unload them from MSbuild.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService.CloseProject(System.UInt32)">
            <summary>
            Close all projects and unload them from MSbuild.
            </summary>
            <param name="projectId">host assigned project id</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectChooseElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.Count" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.FirstChild" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.LastChild" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.AddInitialChild(Microsoft.Build.Construction.ProjectElement)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementContainerLink.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Parent" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ContainingProject" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PreviousSibling" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.NextSibling" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ElementName" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Location" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.OuterElement" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.ExpressedAsAttribute" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.PureText" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.Attributes" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeValue(System.String,System.Boolean)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.GetAttributeLocation(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CopyFrom(Microsoft.Build.Construction.ProjectElement)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectElementLink.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.Content">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.Content" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.GetSubElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.GetSubElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.SetSubElement(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectExtensionsElementLink.SetSubElement(System.String,System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter.ImplicitImportLocation">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.ImplicitImportLocation" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter.OriginalElement">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectImportElementLink.OriginalElement" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectImportGroupElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionGroupElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink" /> object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter.ChangeItemType(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemElementLink.ChangeItemType(System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemGroupElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter.Value">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.Value" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter.ChangeName(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectMetadataElementLink.ChangeName(System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOnErrorElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOtherwiseElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectOutputElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter.Value">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.Value" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter.ChangeName(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectPropertyElementLink.ChangeName(System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyGroupElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter">
            <summary>
            Supported encodings
            VS only supports (UTF8, Unicode and ANSI).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter.Default">
            <summary>
            Encoding.Default
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter.UTF8">
            <summary>
            Encoding.UTF8
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter.Unicode">
            <summary>
            Encoding.Unicode
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter.ANSI">
            <summary>
            Encoding.ANSI
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.PreserveFormatting">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.PreserveFormatting" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Encoding">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Encoding" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ProjectFileLocation">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ProjectFileLocation" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.FullPath">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.FullPath" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.DirectoryPath">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.DirectoryPath" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.LastWriteTimeWhenRead">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.LastWriteTimeWhenRead" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.TimeLastChanged">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.TimeLastChanged" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.HasUnsavedChanges">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.HasUnsavedChanges" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Version">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Version" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.RawXml">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.RawXml" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateChooseElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateChooseElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateImportElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateImportGroupElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateImportGroupElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemDefinitionElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemDefinitionGroupElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemDefinitionGroupElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemElementEx(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemGroupElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateItemGroupElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateMetadataElementEx(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateMetadataElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateMetadataElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOnErrorElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOnErrorElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOtherwiseElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOtherwiseElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOutputElement(System.String,System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateOutputElement(System.String,System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateProjectExtensionsElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectExtensionsElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateProjectSdkElement(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateProjectSdkElement(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreatePropertyElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreatePropertyGroupElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreatePropertyGroupElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateTargetElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTargetElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateTaskElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateTaskElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskBodyElement(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskBodyElement(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskParameterGroupElement">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateUsingTaskParameterGroupElement" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateWhenElement(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.CreateWhenElement(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.MarkDirty(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.MarkDirty(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ReloadFromXmlReader(System.String,System.Boolean,System.Boolean)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Boolean)" />
            Todo: seems we dont have to support that for now
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ReloadFrom(System.String,System.Boolean,System.Boolean)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.ReloadFrom(System.String,System.Boolean,System.Boolean)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Save(Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.Text.Encoding)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.SaveToTextWriter">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectRootElementLink.Save(System.IO.TextWriter)" />
            Todo: not very efficient, but we dont seem to need it anyway.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectSdkElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter.Name">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Name" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter.Returns">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectTargetElementLink.Returns" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.Parameters">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.Parameters" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.ParameterLocations">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.ParameterLocations" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.GetParameter(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.GetParameter(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.RemoveAllParameters">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveAllParameters" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.RemoveParameter(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.RemoveParameter(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.SetParameter(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectTaskElementLink.SetParameter(System.String,System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter.TaskBody">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskBodyElementLink.TaskBody" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter.Name">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectUsingTaskParameterElementLink.Name" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectWhenElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.UsingTaskParameterGroupElementLink" /> object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter">
            <summary>
            Remote DataTime.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter" /> class.
            </summary>
            <param name="date">source</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter.Kind">
            <summary>
            DataTime.Kind;
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.DateTimeRemoter.Ticks">
            <summary>
            DataTime.Ticks;
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter">
            <summary>
            ElementLocation remoter.
            (note ElementLocation is a simple class, but it is abstract and technically "read only" and therefore it can not be
            automatically deserialized).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.#ctor(Microsoft.Build.Construction.ElementLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter" /> class.
            </summary>
            <param name="source">original object</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.File">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.Line">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.Column">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.FileHolder">
            <summary>
            Provide get/set for ElementLocation.File
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.LineHolder">
            <summary>
            Provide get/set for ElementLocation.Line
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.ColumnHolder">
            <summary>
            Provide get/set for ElementLocation.Column
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter.Create(Microsoft.Build.Construction.ElementLocation)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ElementLocationRemoter" /> class.
            </summary>
            <param name="local">local object</param>
            <returns>remoter</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.Project">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Project" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.ItemType">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.ItemType" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.Metadata">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.Metadata" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.GetMetadata(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadata(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.GetMetadataValue(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.GetMetadataValue(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.SetMetadataValue(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemDefinitionLink.SetMetadataValue(System.String,System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectItemLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Project">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Project" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Xml">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Xml" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.EvaluatedInclude">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.EvaluatedInclude" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.MetadataCollection">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.MetadataCollection" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.DirectMetadata">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.DirectMetadata" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.ChangeItemType(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.ChangeItemType(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.GetMetadata(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadata(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.GetMetadataValue(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.GetMetadataValue(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.HasMetadata(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.HasMetadata(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.RemoveMetadata(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.RemoveMetadata(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Rename(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.Rename(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.SetMetadataValue(System.String,System.String,System.Boolean)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectItemLink.SetMetadataValue(System.String,System.String,System.Boolean)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Parent">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Parent" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Xml">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Xml" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.EvaluatedValueEscaped">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.EvaluatedValueEscaped" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Predecessor">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectMetadataLink.Predecessor" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Project">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Project" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Xml">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Xml" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Name">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Name" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.EvaluatedIncludeEscaped">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.EvaluatedIncludeEscaped" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.UnevaluatedValue">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.UnevaluatedValue" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsEnvironmentProperty">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsEnvironmentProperty" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsGlobalProperty">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsGlobalProperty" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsReservedProperty">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsReservedProperty" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Predecessor">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.Predecessor" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsImported">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectPropertyLink.IsImported" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ProjectLink" /> object
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.LastEvaluationId">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.LastEvaluationId" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Xml">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.Xml" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ThrowInsteadOfSplittingItemElement">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ThrowInsteadOfSplittingItemElement" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.IsDirty">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.IsDirty" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GlobalProperties">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.GlobalProperties" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemTypes">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemTypes" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Properties">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.Properties" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ConditionedProperties">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ConditionedProperties" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemDefinitions">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemDefinitions" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Items">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.Items" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemsIgnoringCondition">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ItemsIgnoringCondition" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Imports">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.Imports" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ImportsIncludingDuplicates">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ImportsIncludingDuplicates" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedProperties">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedProperties" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedItemDefinitionMetadata">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItemDefinitionMetadata" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedItems">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.AllEvaluatedItems" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ToolsVersion">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.ToolsVersion" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SubToolsetVersion">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.SubToolsetVersion" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SkipEvaluation">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.SkipEvaluation" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.DisableMarkDirty">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.DisableMarkDirty" />
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.IsBuildEnabled">
            <summary>
            <see cref="P:Microsoft.Build.ObjectModelRemoting.ProjectLink.IsBuildEnabled" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ExpandString(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.ExpandString(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItems(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItems(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItemsByEvaluatedInclude(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsByEvaluatedInclude(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItemsIgnoringCondition(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetItemsIgnoringCondition(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetLogicalProject">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetLogicalProject" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetProperty(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetProperty(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetPropertyValue(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.GetPropertyValue(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.MarkDirty">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.MarkDirty" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ReevaluateIfNecessary">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext)" />
            Note for now we ignore EvaluationContext.
            Not clear if it has any use in our scenario or even it make sense in multi-proc scenario.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveGlobalProperty(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveGlobalProperty(System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveItem(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveItems(System.Collections.Generic.List{Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter})">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveProperty(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SaveLogicalProject">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.SaveLogicalProject(System.IO.TextWriter)" />
            Easy way to implement this without marshaling TextWriter.
            Note that can produce pretty large string (10s of megabytes).
            but in reality I cant even think of a case where anyone would used this.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SetGlobalProperty(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.SetGlobalProperty(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SetProperty(System.String,System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.SetProperty(System.String,System.String)" />
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Unload">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ProjectLink.Unload" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter">
            <summary>
            OOP remoter class to facilitate cross-site implementation of <see cref="T:Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider" /> object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter.GetLocalLoadedProjects(System.String)">
            <summary>
            <see cref="M:Microsoft.Build.ObjectModelRemoting.ExternalProjectsProvider.GetLoadedProjects(System.String)" />
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.KnownRemotableMSBuildObjects">
            <summary>
            MSBuild we use
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase">
            <summary>
            Base for all OOP remoter classes
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId">
            <summary>
            MSBuild collection ID.
            Note we technically don't need this since we only link one collection per site.
            So in theory we can reuse the "ImplementationSite" of the proxy for a CollectionID.
            But it is not really important saving, so it is better to keep it independent so we don't
            force 1 collection per process limitation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId">
            <summary>
            The "real" object ID.
            Used on the implementation (source) site to uniquely identify the actual source MSBuild object.
            Used on consuming site to enforce unique object identity (aka each original source object will alwys have
            exactly one linked object).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType">
            <summary>
            Type of remoted MSBuild object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate">
            <summary>
            Stub created
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease">
            <summary>
            Stub released
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter">
            <summary>
            ResolvedImport remoter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter" /> class.
            </summary>
            <param name="importingElement">ResolvedImport.ImportingElement</param>
            <param name="importedProject">ResolvedImport.ImportedProject</param>
            <param name="sdkResult">ResolvedImport.SdkResult</param>
            <param name="isImported">ResolvedImport.IsImported</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.ImportingElement">
            <summary>
            ResolvedImport.ImportingElement
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.ImportedProject">
            <summary>
            ResolvedImport.ImportedProject
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.SdkResult">
            <summary>
            ResolvedImport.SdkResult
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ResolvedImportRemoter.IsImported">
            <summary>
            ResolvedImport.IsImported
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter">
            <summary>
            SdkResult remoter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter.Create(Microsoft.Build.Framework.SdkResult)">
            <summary>
            Create  a <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter" /> remoter class over local value.
            </summary>
            <param name="local">actual SdkResult</param>
            <returns>remoter</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter.Read(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SdkResultRemoter.Write(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection">
            <summary>
            XmlAttributeLink collection serializer
            (note ElementLocation is a simple class, but it is abstract and technically "read only" and therefore it can not be
            automatically deserialized).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection.#ctor(System.Collections.Generic.IReadOnlyCollection{Microsoft.Build.ObjectModelRemoting.XmlAttributeLink})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection" /> class.
            </summary>
            <param name="collection">actual collection</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection.Collection">
            <summary>
            actual collection
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection.Write(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.XmlAttributeLinkCollection.Read(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest">
            <summary>
            Initial project data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest.ProjectId">
            <summary>
            Assigned logical project ID (host controlled)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest.ProjectType">
            <summary>
            Project type: aka CS / VB or CPS_CS CPS_VB
            This generally define the project system that would service this project currently.
            Ideally it would be the description of "known build authoring type".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest.ProjectFile">
            <summary>
            Main project file (aka Foo.csproj)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest.UserFile">
            <summary>
            User file (aka Foo.csproj.user)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectLoadRequest.LoadProperties">
            <summary>
            Initial properties for evaluation (Configuration, Platform, etc ...)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter" /> service
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy" /> class.
            
             Create proxy that will execute on first available site.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy" /> class.
            
             Create proxy bound to a particular site.
             </summary>
             <param name="site">the site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterProxy.GetLocalLoadedProjects(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter.GetLocalLoadedProjects(System.String)" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.Content">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.Content" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.GetSubElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.GetSubElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.SetSubElement(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter.SetSubElement(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.ImplicitImportLocation">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter.ImplicitImportLocation" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.OriginalElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter.OriginalElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.Project">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.Project" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.ItemType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.ItemType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.Metadata">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.Metadata" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.GetMetadata(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.GetMetadata(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.GetMetadataValue(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.GetMetadataValue(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.SetMetadataValue(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter.SetMetadataValue(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.ChangeItemType(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter.ChangeItemType(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.Project">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Project" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.Xml">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Xml" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.EvaluatedInclude">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.EvaluatedInclude" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.MetadataCollection">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.MetadataCollection" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.DirectMetadata">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.DirectMetadata" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.ChangeItemType(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.ChangeItemType(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.GetMetadata(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.GetMetadata(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.GetMetadataValue(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.GetMetadataValue(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.HasMetadata(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.HasMetadata(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.RemoveMetadata(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.RemoveMetadata(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.Rename(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.Rename(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.SetMetadataValue(System.String,System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter.SetMetadataValue(System.String,System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.Value">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter.Value" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.ChangeName(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter.ChangeName(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.Xml">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Xml" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.EvaluatedValueEscaped">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.EvaluatedValueEscaped" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.Predecessor">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter.Predecessor" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.Value">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter.Value" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.ChangeName(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter.ChangeName(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.Project">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Project" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.Xml">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Xml" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.Name">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Name" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.EvaluatedIncludeEscaped">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.EvaluatedIncludeEscaped" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.UnevaluatedValue">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.UnevaluatedValue" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.IsEnvironmentProperty">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsEnvironmentProperty" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.IsGlobalProperty">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsGlobalProperty" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.IsReservedProperty">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsReservedProperty" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.Predecessor">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.Predecessor" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.IsImported">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter.IsImported" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.LastEvaluationId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.LastEvaluationId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Xml">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Xml" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ThrowInsteadOfSplittingItemElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ThrowInsteadOfSplittingItemElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.IsDirty">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.IsDirty" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GlobalProperties">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GlobalProperties" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ItemTypes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemTypes" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Properties">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Properties" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ConditionedProperties">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ConditionedProperties" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ItemDefinitions">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemDefinitions" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Items">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Items" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ItemsIgnoringCondition">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ItemsIgnoringCondition" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Imports">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Imports" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ImportsIncludingDuplicates">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ImportsIncludingDuplicates" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.AllEvaluatedProperties">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedProperties" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.AllEvaluatedItemDefinitionMetadata">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedItemDefinitionMetadata" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.AllEvaluatedItems">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AllEvaluatedItems" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ToolsVersion">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ToolsVersion" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.SubToolsetVersion">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SubToolsetVersion" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.SkipEvaluation">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SkipEvaluation" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.DisableMarkDirty">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.DisableMarkDirty" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.IsBuildEnabled">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.IsBuildEnabled" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ExpandString(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ExpandString(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetItems(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItems(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetItemsByEvaluatedInclude(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItemsByEvaluatedInclude(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetItemsIgnoringCondition(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetItemsIgnoringCondition(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetLogicalProject">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetLogicalProject" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetProperty(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetProperty(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.GetPropertyValue(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.GetPropertyValue(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.MarkDirty">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.MarkDirty" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.ReevaluateIfNecessary">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.ReevaluateIfNecessary" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.RemoveGlobalProperty(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveGlobalProperty(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.RemoveItem(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveItem(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.RemoveItems(System.Collections.Generic.List{Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter})">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveItems(System.Collections.Generic.List{Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter})" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.RemoveProperty(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.RemoveProperty(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.SaveLogicalProject">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SaveLogicalProject" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.SetGlobalProperty(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SetGlobalProperty(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.SetProperty(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.SetProperty(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.Unload">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter.Unload" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.PreserveFormatting">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.PreserveFormatting" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Encoding">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Encoding" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ProjectFileLocation">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ProjectFileLocation" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.FullPath">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.FullPath" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.DirectoryPath">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.DirectoryPath" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.LastWriteTimeWhenRead">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.LastWriteTimeWhenRead" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.TimeLastChanged">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.TimeLastChanged" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.HasUnsavedChanges">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.HasUnsavedChanges" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Version">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Version" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.RawXml">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.RawXml" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateChooseElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateChooseElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateImportElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateImportElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateImportGroupElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateImportGroupElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateItemDefinitionElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemDefinitionElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateItemDefinitionGroupElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemDefinitionGroupElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateItemElementEx(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemElementEx(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateItemElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateItemGroupElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateItemGroupElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateMetadataElementEx(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateMetadataElementEx(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateMetadataElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateMetadataElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateOnErrorElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOnErrorElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateOtherwiseElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOtherwiseElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateOutputElement(System.String,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateOutputElement(System.String,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateProjectExtensionsElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateProjectExtensionsElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateProjectSdkElement(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateProjectSdkElement(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreatePropertyElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreatePropertyElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreatePropertyGroupElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreatePropertyGroupElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateTargetElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateTargetElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateTaskElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateTaskElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateUsingTaskBodyElement(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskBodyElement(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateUsingTaskParameterGroupElement">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateUsingTaskParameterGroupElement" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateWhenElement(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.CreateWhenElement(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.MarkDirty(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.MarkDirty(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ReloadFromXmlReader(System.String,System.Boolean,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ReloadFromXmlReader(System.String,System.Boolean,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.ReloadFrom(System.String,System.Boolean,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.ReloadFrom(System.String,System.Boolean,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.Save(Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.Save(Microsoft.VisualStudio.ProjectServices.Hosting.EncodingRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.SaveToTextWriter">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter.SaveToTextWriter" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Name">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter.Name" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Returns">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter.Returns" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Parameters">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.Parameters" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.ParameterLocations">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.ParameterLocations" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.GetParameter(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.GetParameter(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.RemoveAllParameters">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.RemoveAllParameters" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.RemoveParameter(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.RemoveParameter(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.SetParameter(System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter.SetParameter(System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.TaskBody">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter.TaskBody" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.Name">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter.Name" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="releaseObjectId">release site reference holder object id</param>
             <param name="releaseSite">the release site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
             <param name="con">collection to read the fixed properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.OnProxyRelease">
            <summary>
            Notification when proxy object is being disposed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.CollectionId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.CollectionId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.ExportId">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.ExportId" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.RemotedObjectType">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.RemotedObjectType" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.Count">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.Count" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.FirstChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.FirstChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.LastChild">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.LastChild" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.Parent">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Parent" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.ContainingProject">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ContainingProject" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.PreviousSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PreviousSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.NextSibling">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.NextSibling" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.ElementName">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ElementName" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.Location">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Location" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.OuterElement">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.OuterElement" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.ExpressedAsAttribute">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.ExpressedAsAttribute" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.PureText">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.PureText" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.Attributes">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.Attributes" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.AddInitialChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.DeepClone(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertAfterChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.InsertBeforeChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementContainerRemoter.RemoveChild(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.GetAttributeValue(System.String,System.Boolean)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeValue(System.String,System.Boolean)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.GetAttributeLocation(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.GetAttributeLocation(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.SetOrRemoveAttribute(System.String,System.String,System.Boolean,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CopyFrom(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectElementRemoter.CreateNewInstance(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.OnStubCreate">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubCreate" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterProxy.OnStubRelease">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IRemoterBase.OnStubRelease" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectServicesInheritanceResolver">
            <summary>
            Descendants resolver interface.
            Allows for proper up-casts to be implemented for remote proxies, without costly reflection (also make it available for native code).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectServicesInheritanceResolver.Resolve(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback)">
            <summary>
            Determine top interface in inheritance chain for the remote object which 
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="callback"> resolved callback that will be called on the appropriate top-most interface for current implementation</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback">
            <summary>
            Descendants resolver callback interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter)">
            <summary>
            it is a IProjectChooseElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter)">
            <summary>
            it is a IProjectExtensionsElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter)">
            <summary>
            it is a IProjectImportElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter)">
            <summary>
            it is a IProjectImportGroupElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter)">
            <summary>
            it is a IProjectItemDefinitionElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter)">
            <summary>
            it is a IProjectItemDefinitionGroupElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter)">
            <summary>
            it is a IProjectItemDefinitionRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter)">
            <summary>
            it is a IProjectItemElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter)">
            <summary>
            it is a IProjectItemGroupElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <summary>
            it is a IProjectItemRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter)">
            <summary>
            it is a IProjectMetadataElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter)">
            <summary>
            it is a IProjectMetadataRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter)">
            <summary>
            it is a IProjectOnErrorElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter)">
            <summary>
            it is a IProjectOtherwiseElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter)">
            <summary>
            it is a IProjectOutputElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter)">
            <summary>
            it is a IProjectPropertyElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter)">
            <summary>
            it is a IProjectPropertyGroupElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <summary>
            it is a IProjectPropertyRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter)">
            <summary>
            it is a IProjectRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <summary>
            it is a IProjectRootElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter)">
            <summary>
            it is a IProjectSdkElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter)">
            <summary>
            it is a IProjectTargetElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter)">
            <summary>
            it is a IProjectTaskElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter)">
            <summary>
            it is a IProjectUsingTaskBodyElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter)">
            <summary>
            it is a IProjectUsingTaskElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter)">
            <summary>
            it is a IProjectUsingTaskParameterElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter)">
            <summary>
            it is a IProjectWhenElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesInheritanceResolverCallback.Resolved(System.Object,Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter)">
            <summary>
            it is a IUsingTaskParameterGroupElementRemoter object
            </summary>
            <param name="context"> caller specific context to be passed through</param>
            <param name="resolved">the correct interface</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollectionStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollection" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollection" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupCollectionStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroup" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemGroupStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItem" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildItemStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollectionStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollection" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupCollectionStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroup" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildPropertyGroupStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildServiceStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildService" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedBuildServiceStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngineStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngine" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedEngineStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.#ctor(System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.LogTextMessage(System.String)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.LogTextMessage(System.String)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.BeginLogging">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.BeginLogging" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.LogFormattedMessage(System.Int32,System.Byte[])">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.LogFormattedMessage(System.Int32,System.Byte[])" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallbackProxy.Shutdown">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerCallback.Shutdown" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger" /> interface
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.#ctor(System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy" /> class.
            
             Create a proxy object to remote execution via SMP buffer.
             </summary>
             <param name="objectId">remote "this", will be passed back to the stub to connect the right instance</param>
             <param name="site">the implementation site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.Finalize">
            <summary>
            Release the remote wrapper (objectID) on the implementation site.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.Verbosity">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Verbosity" />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.SubscribedEvents">
            <inheritdoc /> <see cref="P:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.SubscribedEvents" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.Log(System.Byte[])">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Log(System.Byte[])" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLoggerProxy.Shutdown">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedLogger.Shutdown" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy">
             <summary>
             Proxy for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback" /> service
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions / generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy" /> class.
            
             Create proxy that will execute on first available site.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy" /> class.
            
             Create proxy bound to a particular site.
             </summary>
             <param name="site">the site 0=host (devenv.exe) 1+ the site process (PSHost.exe)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.LoadAndEvaluationCompleted(System.Int32,System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.LoadAndEvaluationCompleted(System.Int32,System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.ReevaluateProjectCompleted(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.ReevaluateProjectCompleted(System.UInt32,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.OnBuildCompleted(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.OnBuildCompleted(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallbackProxy.OnIntelisenseBuildReady(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult,System.Byte[])">
            <inheritdoc /> <see cref="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedOperationsCallback.OnIntelisenseBuildReady(System.UInt32,System.Boolean,Microsoft.VisualStudio.ProjectServices.Hosting.HResult,System.Byte[])" />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShimStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShim" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectShimStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsServiceStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsService" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedProjectsServiceStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollectionStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollection" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollection" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IHostedTargetCollectionStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateServiceStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateService" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ILoadAndEvaluateServiceStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectChooseElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectCollectionRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectExtensionsElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectImportGroupElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionGroupElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemDefinitionRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemGroupElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectItemRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectMetadataRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOnErrorElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOtherwiseElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectOutputElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyGroupElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectPropertyRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectRootElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectSdkElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTargetElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectTaskElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskBodyElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectUsingTaskParameterElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IProjectWhenElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterStub">
             <summary>
             Stub for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter" />
            
             Will accept remote calls via SMP buffer connection, deserialize the parameters
             call the server side implementation and serialize results back (if any).
            
             This file is auto generated. Do not make changes here.
             Instead fix the definitions/ generation attributes for <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter" /> or fix the generator code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterStub.CreateObjectIdNotify(Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoter)">
            <summary>
            Save the instance and notify for stub creation.
            </summary>
            <param name="data">the implementation</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.IUsingTaskParameterGroupElementRemoterStub.Invoke(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Handle a single remote invocation.
            </summary>
            <param name="connection">SMP Buffer</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesProxies">
            <summary>
            Utility class to hook-up the SMP driven Hosted interface proxy serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ProjectServicesProxies.Init(Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe)">
            <summary>
            Initialize the proxies connection mappers
            </summary>
            <param name="pipe">shared memory pipe</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.Connection">
            <summary>
            Facilitate access to shared memory buffer for the purpose
            of data (and execution) exchange between all involved processes.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.Connection" /> class.
            </summary>
            <param name="pipe">shared memory fragment</param>
            <param name="site">the target server process</param>
            <param name="thread">the server thread</param>
            <param name="isServer">whether connection would be used by a client or the server</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.CurrentTrace">
            <summary>
            For trace/telemetry
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Pipe">
            <summary>
            The shared memory buffer this is based on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Site">
            <summary>
            The site (process) that service this connection
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Thread">
            <summary>
            The site thread
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.ServerReadyEvent">
            <summary>
            Service ready event (used to unblock connect loop)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.WaitForConnection">
            <summary>
            Used by service thread, wait for client to begin remote invocation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.TryConnect">
            <summary>
            Used by client to attempt non blocking acquire server connection.
            </summary>
            <returns>true if succeeded</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.EndInvocation">
             <summary>
             Client completes invocation (and releases the buffer)
             it is mandatory for client to call this after Connecting to allow others to use the same buffer.
            
             this should always be used by generate code.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.EndServiceCall">
            <summary>
            Server completes the execution after client connected and issued a command.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.ResultsReady">
             <summary>
             Server finished method execution (in case of function with return),
             or finished argument acquisition (for void, no out, functions).
            
             Client can read the results now.
            
             this is server called to announce this.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.WaitForResults">
            <summary>
            Client call to wait for results ready announcement (this can cause actual event wait in case of long service)
            And is potential point where we can provide "async" semantic if we want to.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Read(System.String@)">
            <summary>
            String
            </summary>
            <param name="value">result</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Read``1(``0@)">
            <summary>
            Int32
            </summary>
            <typeparam name="T">unmanaged type (be reasonable)</typeparam>
            <param name="value">result</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Read">
            <summary>
            read a string from the shared memory buffer
            </summary>
            <returns>the string transmitted</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Read``1">
             <summary>
             Read a "regular" (unmanaged) type.
            
             TODO: we might want to use explicit implementation (only very few types are used).
             This assume the same memory representation across all sites
             </summary>
             <typeparam name="T">unmanaged type (be reasonable)</typeparam>
             <returns>the transmitted value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Write(System.String)">
            <summary>
            Sent a string via SMB.
            </summary>
            <param name="s">string value to send</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Write``1(``0)">
            <summary>
            Sent a "regular" value.
            </summary>
            <typeparam name="T">same as read</typeparam>
            <param name="value">value to sent</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.Connection.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1">
             <summary>
             Used to provide remote "this" pointer for SMP services.
             We need this to be:
              1) Thread safe (both on read/add/remove)
              2) Very fast (especially on get). The target SMP call frequency is ~ 1M calls /s
            
             This class bellow on a good machine has this performance: (any number of elements)
                Set: (1Remove + 1Add) ~40M/s
                Get: ~167M/s
            
             For reference: (same machine)
              Simple dictionary (not thread safe, any number of elements)
                  Combo: (1Remove + 1Add) ~25M/s
                  Get: ~51M/s
            
               Concurrent dictionary  (any number)
                  Combo: (1Remove + 1Add) ~8M/s
                  Get: ~42M/s
            
               Custom thread safe dictionary (dictionary + spinlock around Get/Add/Remove)(any number)
                  Combo: (1Remove + 1Add) ~15M/s
                  Get: ~42M/s
            
               Immutable dictionary (1k elements / 1M elements - the only one that seems to have measurable difference based on elements count)
                  Combo: (1Remove + 1Add) ~370K/s (1K elems / 200k/s (1M elems)
                  Get: ~12M/s (1k elems) / 9.5M/s (1M elems)
            
             We can consider moving the "page" pool to a shared memory block as well, to achieve unified hosted object pool across all nodes.
             This can remove the need for client shim to hold on site ID, and also allow transparent object to site map. But for now we dont need that.
             </summary>
             <typeparam name="T">hosted type</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1" /> class.
            </summary>
            <param name="preAllocate">(optional) initial size (in terms of number of objects) to allocate pointer slots for</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1.Size">
            <summary>
            The current size (number of allocated slots). This is always &gt;= of the actual active objects. It can only grow for the session.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1.Add(`0)">
            <summary>
            Add a new object to remote.
            </summary>
            <param name="obj">object (server implementation)</param>
            <returns>the "remote this" id</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1.Get(System.Int32)">
            <summary>
            Get the actual object implementation from "remote this"
            </summary>
            <param name="hostedObjectId">remote this</param>
            <returns>actual object instance</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.HostedObjectMap`1.Release(System.Int32)">
             <summary>
             "Final release" of a hosted object.
             (client does not need it any more).
             This does not mean that server implementation will b Disposed/collected. That will be implementation decision.
             It only means that we remove the object from the map.
            
             </summary>
             <param name="hostedObjectId">remote this</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.HResult">
            <summary>
            HResult semantic
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.S_OK">
            <summary>
            Success (anything &gt;= 0)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.E_NotHosted">
             <summary>
             Object is not hosted by the site.
             Not wired for now, we will need that for supporting
             Project hosting transition between different host processes.
            
             Idea is that infrastructure will handle this by discovering the
             new side (from project ID), reconnect to it and reissue the command.
             (so it would be transparent for consumer).
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.E_Exception">
            <summary>
            Exception occurred. (not used for now)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.E_Timeout">
            <summary>
            TBD: Operation timeout
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.E_Canceled">
            <summary>
            TBD: Cancellation support
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.HResult.E_Fail">
            <summary>
            Second most favorite hr
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPProxyConnector">
            <summary>
            Client SMP proxy connector
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPProxyConnector.Site">
            <summary>
            The server site (process).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPProxyConnector.ConnectAny">
            <summary>
            Aquire a channel.
            </summary>
            <returns>the chanel aquired</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPSerializable">
            <summary>
            Custom SMP serialization support
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPSerializable.Write(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Serialize object
            </summary>
            <param name="connection">SMB object</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPSerializable.Read(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            De-serialize object
            </summary>
            <param name="connection">SMB object</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace">
            <summary>
            Tracing support for SMP
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace.BeginServiceCall">
            <summary>
            Called on beginning of service call
            </summary>
            <returns>the specific thread bound interface (can be used on the same thread for efficiency to avoid TLS lookups)</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace.SetInterfaceName(System.String)">
            <summary>
            record of the interface name
            </summary>
            <param name="interfaceName"> interface name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace.SetMethodName(System.String)">
            <summary>
            record the method name.
            </summary>
            <param name="methodName">method name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace.SetCustomData(System.String,System.String)">
            <summary>
            Additional (data) based hint to pivot the trace on
            for example the propertyName in GetEvaluatedProperty() call, or result.
            </summary>
            <param name="hint">any string to pivot on  in the summary</param>
            <param name="details">useful data (only appears in raw log)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ISMPTrace.ServiceCallEnd(System.Int32,System.Int32)">
            <summary>
            Called on service call completion
            </summary>
            <param name="received">bytes received</param>
            <param name="sent">bytes sent</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase">
            <summary>
            SMP based remote object execution support thread.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase" /> class.
            
             </summary>
             <param name="connection">SMB slot</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase.Run">
            <summary>
            Service thread loop.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase.GetThreadName(System.Int32)">
            <summary>
            (for debugging)
            the thread name of the service thread, based on SMP thread id.
            </summary>
            <param name="thread">thread index (as in SMP buffer id)</param>
            <returns>a desired thread name</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.ServiceThreadBase.ServiceCall(Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
            <summary>
            Implementation will be generated.
            </summary>
            <param name="connection">SMB slot</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState">
             <summary>
             Port state transitions (connection protocol)
                [?] =(*)=&gt; [?] transitions done by the server
                 [?] -(*)-&gt; [?] transition by the client
            
                a race state change - only one branch will be taken depending on whether owner and other side manage it first.
                if successful that will prevent the other side attempt since initial state would change.
                [1] -(*)-&gt; [?!=1]
                  \ =(*)=&gt; [?!=1]
            
                Transitional actions:
                 (c) connect established (client) (note the callback slot always get int[C] state first.
                 (d) disconnect (either server or client) - it is a race who do it first.
            
                 [R]-(c)-&gt; [C] -(d)-&gt; [DC] = (d) =&gt; [R]
                             \ =(d)=&gt; [DS] - (d) -&gt; [R]
            
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState.Ready">
            <summary>
            [R] the slot is ready to connect by clients
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState.Connected">
            <summary>
            [C] grabbed by a client,
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState.ServerDisconnected">
            <summary>
            [DS] Disconnected by one side (either client or server) whoever is done first.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState.ClientDisconnected">
            <summary>
            [DC] Disconnected by one side (either client or server) whoever is done first.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState.SiteClosed">
            <summary>
            [X] Site is deprecated (not used yet)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe">
            <summary>
            Uses the memory mapped file to manage a shared memory region to facilitate
            data exchange between components between multiple processes (or threads)
             shared memory layout, no pointer data all integers and bytes.
             all users of the shared memory has equal rights
             [PipeHeader]
             [SlotHeader1][InvocationDataBuffer][ResultDataBuffer]
             [SlotHeader2][InvocationDataBuffer][ResultDataBuffer]
            .................
             [SlotHeaderN][InvocationDataBuffer][ResultDataBuffer]
            Note: seems all managed structures will be aligned at 8 bytes.
            so we keeping the size as multiple of 8 here.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe" /> class.
             Creates a new  shared region (name)
             Used by host process only (devenv.exe).
            
             </summary>
             <param name="name">pipe name. Note there can be only one pipe with the same name in the system</param>
             <param name="maxSites">max sites (typically external processes but could be a thread collection within same process)</param>
             <param name="slotsPerSite">data exchange buffers (slots) allocated for each site</param>
             <param name="hostSlots">data exchange buffers (slots) allocated for host (site 0)</param>
             <param name="dataSize">data exchange buffer size</param>
             <param name="loopsBeforeTimeout">look at comment for description (based on the cost of HPC timer)</param>
             <param name="timeoutBeforeSleepMicroseconds">look at comment for description(based on cost of Event.waitOne())</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe" /> class.
             Creates a new  shared region (name)
             Used by remote sites to map the already created (by the host) memory buffer
            
             </summary>
             <param name="name">pipe name. Note there can be only one pipe with the same name in the system</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.Trace">
            <summary>
            Trace / telemetry support
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.HostActive">
            <summary>
            Host activity detection mutex.
            If Host process (VS) closes the SMP, or getting killed. This will become signaled
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.Name">
            <summary>
            Pipe name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.HostSlots">
            <summary>
            see PipeHeader
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SiteSlots">
            <summary>
            see PipeHeader
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.MaxSites">
            <summary>
            see PipeHeader
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataSize">
            <summary>
            see PipeHeader
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.HostPid">
            <summary>
            Host process PID
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.GetSiteSlots(System.Int32)">
            <summary>
            Get the number of allocated slots for site
            </summary>
            <param name="site">the site (0 = host process) 1-MaxSites = remote site</param>
            <returns>number of data exchange buffers (slots) available for that site</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.GetSlotPointers(System.Int32,System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader*@,Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataBuffer*@,Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataBuffer*@)">
            <summary>
            Get the shared memory buffer pointers to desired data exchange slot.
            Used by connection class only
            </summary>
            <param name="site">the site (0 = host process) 1-MaxSites = remote site</param>
            <param name="siteThread">(or slot) the buffer</param>
            <param name="slotHeader">slot header data</param>
            <param name="invocationBuffer">invocation buffer (Proxy =&gt; Stub)</param>
            <param name="resultBuffer">result buffer (Stub =&gt; Proxy) </param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader">
             <summary>
             Shared memory buffer generic structure info.
             Specifies sites (processes) layout (in terms of data exchange slots)
            
             Note: seems all managed structures will be aligned at 8 bytes.
             so we keeping the size as multiple of 8 here.
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.HostSlots">
            <summary>
            Host process (aka devenv.exe) allocated slots
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.SiteSlots">
            <summary>
            Each remote site (PSHost.exe) allocated slots
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.MaxSites">
            <summary>
            Maximum remote sites supported by this SMB.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.BufferSize">
            <summary>
            The data exchange buffer size.
            This is the allocated bytes (in the shared memory block) for both sending and receiving buffers.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.HostPid">
            <summary>
            The host process pid
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.LoopsBeforeTimeout">
            <summary>
            For consistency across all sites
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.TimeoutBeforeSleepMicroseconds">
            <summary>
            For consistency across all sites
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.PipeHeader.UniqueId">
            <summary>
            (Debugging) Cross process unique (interlocked.increment) Id placeholder
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader">
            <summary>
            Data section for each buffer for managing the exchange buffer data state
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.SiteID">
            <summary>
            For debugging
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.SiteThreadID">
            <summary>
            For debugging
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.State">
            <summary>
            see <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SlotState" />
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.WaitForConnect">
            <summary>
            event Name: C_{PipeName}_{SiteID}_{SiteThreadID}
            server is waiting for connection) on
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.WaitForServerReady">
            <summary>
            event Name: R_{PipeName}_{SiteID}_{SiteThreadID}
            server can be connected,
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.WaitForResults">
            <summary>
            event Name: D_{PipeName}_{SiteID}_{SiteThreadID}
            client is waiting for invocation completion
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.InvocationCompleted">
            <summary>
            (flag) 1 = Invocation completed on server side and results can be consumed by client.
            Note for void functions with no out parameter, we set that just before the invocation completes
            (so void functions are fire and forget by default). This is for now.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.SlotHeader.SiteUniqueId">
            <summary>
            for padding so size is multiple of 8 and debugging slot specific uniqueID.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataBuffer">
            <summary>
            The data exchange buffer control data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataBuffer.Written">
            <summary>
            bytes sent to the buffer
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe.DataBuffer.Read">
            <summary>
            bytes read from the buffer. At any time Written &gt;= Read.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException">
            <summary>
            Wrapper for SMP related exception
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException" /> class.
            
             </summary>
             <param name="message">exception message</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException" /> class.
            
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException.#ctor(System.String,System.Exception)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException" /> class.
            
             </summary>
             <param name="message">not used</param>
             <param name="ex">not used as well</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.HResult,Microsoft.VisualStudio.ProjectServices.Hosting.Connection)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException" /> class.
            
             </summary>
             <param name="hr">hresult</param>
             <param name="connection">Connection</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipeException" /> class.
            
             </summary>
             <param name="info">whatever it means</param>
             <param name="context">had to add it</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1">
            <summary>
            SMB Hosted object proxy base class
            </summary>
            <typeparam name="T">hosted interface</typeparam>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.connector">
            <summary>
            Connections distributor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.#ctor(System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1" /> class.
            
             </summary>
             <param name="objectId">remote this</param>
             <param name="site">the implementation site</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1" /> class.
            
             </summary>
             <param name="objectId">remote this</param>
             <param name="site">the implementation site</param>
             <param name="releaseObjectId">the reference holding object id</param>
             <param name="releaseSite">the reference holding site</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector,System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1" /> class.
            
             </summary>
             <param name="connector">proxy site connector</param>
             <param name="objectId">remote this</param>
             <param name="site">the implementation site</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1" /> class.
            
             </summary>
             <param name="connector">proxy site connector</param>
             <param name="objectId">remote this</param>
             <param name="site">the implementation site</param>
             <param name="releaseObjectId">the reference holding object id</param>
             <param name="releaseSite">the reference holding site</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.ReleaseSite">
            <summary>
            The site (process) that holds the stub refcount (stub owner).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.ReleaseObjectId">
            <summary>
            The reference holding object id.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.SetConnector(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector)">
            <summary>
            Static connection initialization support.
            </summary>
            <param name="pipeConnector">the connection manager with that is specific for particular interface</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectProxy`1.AcquireForRelease">
            <summary>
            Establish a SMB data channel.
            </summary>
            <returns>the slot connection for the servicing thread that we locked</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectStub`1">
            <summary>
            Base class for generated hosted interface stubs
            </summary>
            <typeparam name="T">hosted service interface</typeparam>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectStub`1.activeInstances">
            <summary>
            the object instances map
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectStub`1.CreateObjectId(`0)">
            <summary>
            Create a remote "this" for a hosted interface object instance.
            </summary>
            <param name="impl">the implementation</param>
            <returns>objectId</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPObjectStub`1.GetInstance(System.Int32)">
            <summary>
            Handle input proxy argument attaching id to actual instance
            </summary>
            <param name="objectId">proxy object id</param>
            <returns>object instance</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy">
            <summary>
            Base class for generated hosted interface proxies
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.objectId">
            <summary>
            object id (for Object proxies), 0 for the services.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.ISMPProxyConnector)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy" /> class.
            </summary>
            <param name="connector">shared memory buffer access manager</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.ISMPProxyConnector,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy" /> class.
            </summary>
            <param name="connector">shared memory buffer access manager</param>
            <param name="objectId">the exported object index</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.Site">
            <summary>
            The site (process) that holds the implementation (implementation owner).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.ObjectId">
            <summary>
            the remote "this".
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.Acquire">
            <summary>
            Establish a SMB data channel.
            </summary>
            <returns>the slot connection for the servicing thread that we locked</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxy.OnError(Microsoft.VisualStudio.ProjectServices.Hosting.HResult,Microsoft.VisualStudio.ProjectServices.Hosting.Connection,System.Boolean)">
            <summary>
            Called when error occurred during remote invocation
            this just give us opportunity to place a common logic if needed
            </summary>
            <param name="hr">the error code</param>
            <param name="connection">connection object</param>
            <param name="doThrow">whether flow expect us to throw or it will handle the error naturally</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper">
            <summary>
            Helper class for establishing the static SMP connection data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe)">
             <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper" /> class.
            
             </summary>
             <param name="pipe">the SMP instance</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.GetConnectionsForProxy(System.Int32[],System.Int32[])">
            <summary>
            Get connection mapping for client interface proxy
            </summary>
            <param name="hostThreads">logical servicing threads in devenv</param>
            <param name="siteThreads">logical servicing threads in PSHost</param>
            <returns>connector object</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.SMPProxySiteConnectionMapper">
            <summary>
            Helper class for establishing the static SMP connection data (for particular site)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.SMPProxySiteConnectionMapper.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SharedMemoryPipe,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.SMPProxySiteConnectionMapper" /> class.
            </summary>
            <param name="pipe">the SMP instance</param>
            <param name="site">the site (0= VS, 1..N = PSHost.exe(i))</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnectionMapper.SMPProxySiteConnectionMapper.GetConnectionsForProxy(System.Int32[])">
            <summary>
            Get connection mapping for client interface proxy
            </summary>
            <param name="threads">logical servicing threads</param>
            <returns>connector object</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector">
             <summary>
             Client SMP proxy connector (for all sites)
            
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector" /> class.
            </summary>
            <param name="sites">sites count</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector.Site">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector.SetSiteConenctor(System.Int32,Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector)">
            <summary>
            Set common site connector object
            </summary>
            <param name="site">0 = VS, 1+ PSHost</param>
            <param name="siteConnector">site specific connector</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector.GetSiteConenctor(System.Int32)">
            <summary>
            Get the site specific connector
            </summary>
            <param name="site">0 = VS, 1+ PSHost</param>
            <returns>site specific connector</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector.ConnectAny">
            <summary>
            Establish a connection by taking the ownership of SMP buffer
            on the first possible service thread.
            </summary>
            <returns>connection ready to transmitting data</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector">
            <summary>
            Client SMP proxy connector for particular site
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.Connection[],Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector" /> class.
            </summary>
            <param name="connections">server threads connections</param>
            <param name="aggregated">aggregated event for server ready</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector.Site">
            <summary>
            Pipe site
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector.ConnectEvent">
            <summary>
            Aggregated connection wait event
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector.ConnectAny">
            <summary>
            Establish a connection by taking the ownership of SMP buffer
            on the first possible service thread.
            </summary>
            <returns>connection ready to transmitting data</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxySiteConnector.IsAnyConnected">
            <summary>
            Attempts to connect to any of the listed slots
            </summary>
            <returns>connected slot (if successful)</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1">
            <summary>
            SMB Hosted service (singleton) proxy base class
            </summary>
            <typeparam name="T">hosted service interface</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1" /> class.
            the object is binded to a particular site (process)
            </summary>
            <param name="site">the implementation site</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1" /> class.
            the object will execute on the first site (process) it is able to
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1" /> class.
            the object is binded to a particular site (process)
            </summary>
            <param name="connector">proxy site connector</param>
            <param name="site">the implementation site</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1.#ctor(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1" /> class.
            the object will execute on the first site (process) it is able to
            </summary>
            <param name="connector">proxy site connector</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceProxy`1.SetConnector(Microsoft.VisualStudio.ProjectServices.Hosting.SMPProxyConnector)">
            <summary>
            Static connection initialization support.
            </summary>
            <param name="pipeConnector">the connection manager with that is specific for particular interface</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceStub`1">
            <summary>
            Base class for generated hosted interface stubs
            </summary>
            <typeparam name="T">hosted service interface</typeparam>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceStub`1.objectInstance">
            <summary>
            the object instances map
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPServiceStub`1.InitService(`0)">
            <summary>
            Create a remote "this" for a hosted interface object instance.
            </summary>
            <param name="impl">the implementation</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPEventWaitState">
             <summary>
             interlocked control over event usage to prevent unnecessary event activation
            
             For reference:
               event.Set() perf is around 1m/s
               interlocked exchange check is ~200m/s
             Most of the time, given our ussage pattern and the short duration active wait, we don't actually need to enter effective event wait
             we only pay that single interlocked cost, which is significant since we target SMP service throughput of ~1m simple calls per second.
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPEventWaitState.Ready">
            <summary>
            No one is waiting on event (event state is always set to signaled before transition to Ready)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.Hosting.SMPEventWaitState.Waiting">
            <summary>
            Someone is waiting on the event (event state is set to not-signaled, before transition to Waiting, condition is checked after transition ).
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait">
            <summary>
            SMP connection wait event specialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.#ctor(System.Int32*,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait" /> class.
            </summary>
            <param name="waitState">the fast check shared memory field</param>
            <param name="name">the shared event name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait" /> class.
            This is "aggregated" event that will support ConnectAny semantic, where we use WaitAny type semantic.
            </summary>
            <param name="toWait">events to aggregate (corresponding to multiple connections)</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Name">
            <summary>
            Debugging (name)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Init(System.Int32,System.Int32)">
             <summary>
             Set the short timeout control parameters
             The logic is to:
              waiter will do "loopsBeforeTimeout" checks of wait condition.
              if it is not satisfied, at the exact
              "loopsBeforeTimeout" iteration, it will take a HFC measurement for current time.
              at each iteration after we measure the time delta and checking the condition and if it exceeds "timeoutBeforeSleepMicroseconds"
            
             For reference to pick educated values for these:
             (again we target 1m/s throughput)
              1) waking a thread via event sleep (wait for event) is very costly for our scenario. it has ~50k/s throughput. (that is ~20microseconds or 0.02ms).
              2) Frequency when (other sider consuming data - aka freeing buffer, or supplying data) is in range 100m - 1g/s frequency.
              3) HFC timer access is relatively fast ~30m/s (but still significantly slower than consuming / provider frequency.
              4) The "condition" check typically 200m-500m/s.
            
              so ~15 loops (with no time check) is roughly similar to 1 loop with time check
              on average we need ~5 loops to "unlock".
              target (small methods/properties/dictionary looks) invocations can go ~30m/s (thats calling on the same thread).
            
              so a good initial guess for optimal timings is something like:
              - loopsBeforeTimeout: 50 (less 15 will cause significant lost because of HFC cost)
              - timeoutBeforeSleepMicroseconds: 100mircroseconds (given the high cost of event wake-up and average)
             </summary>
             <param name="loopsBeforeTimeout">look at comment for description (based on the cost of HPC timer)</param>
             <param name="timeoutBeforeSleepMicroseconds">look at comment for description(based on cost of Event.waitOne())</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Wake">
            <summary>
            Ensures unblocking any potential waiters.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Wait(System.Func{Microsoft.VisualStudio.ProjectServices.Hosting.Connection})">
            <summary>
            This is for supporting ConnectAny() case.
            </summary>
            <param name="waitCondition">the underlying condition checker</param>
            <returns>the connection object that actually get locked</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Wait(System.Func{System.Boolean})">
            <summary>
            Simple wait case
            </summary>
            <param name="waitCondition">the underlying condition checker</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.Hosting.SMPWait.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.DTBBBuildResultReader">
            <summary>
            Wrapper implementation for dtbb result source
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DTBBBuildResultReader.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DTBBBuildResultReader" /> class.
            </summary>
            <param name="buildResults">dtbb build results</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DTBBBuildResultReader.GetBlob(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}},System.String)">
            <summary>
            Translate and serialize intellisense build result.
            </summary>
            <param name="projectType">project type</param>
            <param name="buildResults">the build results (aggregated targets outputs)</param>
            <param name="projectFile">the project file full path</param>
            <returns>binary blob compatible with compiler cache format</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DTBBBuildResultReader.TryGetValue(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader}@)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.ProjectDtar">
            <summary>
            Invokes RAR task with project dtar specific inputs
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.RarInputs">
            <summary>
            Accessor for RAR related properties in the projectInstance.
            See ResolveAssemblyReference task MSDN docs for member descriptions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.RarInputs.ReferencePaths">
            <summary>
            Gets the paths to assemblies referenced by this project, indexed by simple name.
            Only initialized if <see cref="P:Microsoft.VisualStudio.ProjectServices.RarInputs.UseReferencesFromProject" /> is true.
            </summary>
            <remarks>
            The key comparer for this dictionary is <see cref="P:System.StringComparer.OrdinalIgnoreCase" />.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.#ctor">
            <summary>
            Constructor is used for deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.SplitProperty(System.String)">
            <summary>
            We need to split a property in the same way that MSBuild will do so.
            MSBuild will split the string based on ;  then it will trim each of the results.
            Any non empty entries will be added to the list to be passed to the task, empty entries will be ignored.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.GetAssemblyTableItems(System.Func{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.ProjectServices.RarInputs.ItemWrapper})">
            <summary>
            Given a list of live items we need make a copy of the items and make sure that their itemSpec is a full path
            and that the FrameworkDirectory metadata is a full path.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.GetReferencePathItems(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.ProjectServices.RarInputs.ItemWrapper}})">
            <summary>
            Create a collection of ReferencePath items keyed by the simple names of the assemblies they refer to.
            </summary>
            <remarks>
            When simple name collisions are encountered, the "last one wins".
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.SaveCache(System.Object)">
            <summary>
            Save the cache file to disk. Note the parameter is required for the waitcallback delegate.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.OpenCache(Microsoft.Build.Execution.ProjectInstance,System.Object)">
            <summary>
            Open the RAR inputs from the ondisk cache. Return a populated rar input object.
            Open cache may return null if the cache could not be deserialized.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.OpenCache(Microsoft.Build.Execution.ProjectInstance,System.Object,System.Func{System.String,System.Boolean})">
            <summary>
            Open the RAR inputs from the ondisk cache. Return a populated rar input object.
            Open cache may return null if the cache could not be deserialized.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.AreFrameworkPathsInCacheValid(Microsoft.Build.Execution.ProjectInstance,System.Func{System.String,System.Boolean})">
            <summary>
            Make sure that certain important paths in the cache file exist on disk.
            If these paths do not exist then the cache has most likely been moved to another machine
            and the cache needs to be invalidated.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.AddDirectoryToValidationList(System.String[],System.Collections.Generic.List{System.String})">
            <summary>
            Give a string array add it to the list of directories to validate as long as the path is not null or empty since we do not want to validate those paths
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputs.AddDirectoryToValidationList(Microsoft.Build.Framework.ITaskItem[],System.Collections.Generic.List{System.String})">
            <summary>
            Give a ITaskItem array add it to the list of directories to validate as long as the path is not null or empty since we do not want to validate those paths
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.RarInputsReader">
            <summary>
            RAR Deserializer. Uses BinaryReader to deserialize RarInputs.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputsReader.Read(System.Int32)">
            <summary>
            Deserializes RarInputs. The sequence of reading must match the sequence of writing in RarInputsWriter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.RarInputsWriter">
            <summary>
            RAR Serializer. Uses BinaryWriter to serialize RarInputs.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.RarInputsWriter.Write(Microsoft.VisualStudio.ProjectServices.RarInputs)">
            <summary>
            Serializes RarInputs. The sequence of writing must match the sequence of reading in RarInputsReader.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.ReferencePathItem">
            <summary>
            Describes a subset of the data we know about a resolved reference.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.ReferencePathItem.FullPath">
            <summary>
            Gets the full path to the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.ReferencePathItem.AssemblyName">
            <summary>
            Gets the assembly name for the assembly, if it is available.
            </summary>
            <value>An assembly name, or <c>null</c> if none is available.</value>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.ReferencePathItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.ReferencePathItem" /> class.
            </summary>
            <param name="fullPath">The MSBuild ReferencePath item from which to extract data.</param>
            <param name="fusionName">Assembly name</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.ToolLocationHelper.GetPathToReferenceAssemblies(System.String)">
            <summary>
            Returns the paths to the reference assemblies location for the given target framework.
            This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles
            In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths
            for the legacy .net frameworks. This chaining will use the existing ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.
            </summary>
            <param name="frameworkMoniker">Moniker for framework</param>
            <returns>Array of reference assembly paths strings. May return <c>null</c> in certain error conditions.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.ToolLocationHelper.ResolveAssemblyReference(System.Collections.Generic.IEnumerable{System.String},Microsoft.VisualStudio.ProjectServices.RarInputs,System.String[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Actually invokes RAR task with given inputs
            </summary>
            <param name="assemblies">The MSBuild Reference item names (which may at least be fusion names and simple names -- perhaps paths too?)</param>
            <returns>A dictionary of assembly names and their resolved paths.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.ToolLocationHelper.MockEngine">
            <summary>
            Engine required by RAR, primarily for collecting logs
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult">
            <summary>
            Design time build result.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.#ctor(System.Int32,System.Boolean,Microsoft.Build.Execution.BuildResultCode,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Tuple{Microsoft.Build.Execution.TargetResultCode,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult" /> class.
            </summary>
            <param name="resetId">The reset Id</param>
            <param name="fromCache">From cache or not</param>
            <param name="overallResult">The overall msbuild result</param>
            <param name="resultsByTarget">The results by target</param>
            <param name="resultsByOutputTaskItem">The results by output TaskItem</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.#ctor(System.Int32,System.Boolean,Microsoft.Build.Execution.BuildResultCode,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Tuple{Microsoft.Build.Execution.TargetResultCode,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult" /> class.
            </summary>
            <param name="resetId">The reset Id</param>
            <param name="fromCache">From cache or not</param>
            <param name="overallResult">The overall msbuild result</param>
            <param name="resultsByTarget">The results by target</param>
            <param name="resultsByOutputTaskItem">The results by output TaskItem</param>
            <param name="outputProperties">Output properties</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.#ctor(System.Int32,System.Boolean,System.Boolean,Microsoft.Build.Execution.BuildResultCode,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Tuple{Microsoft.Build.Execution.TargetResultCode,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult" /> class.
            </summary>
            <param name="resetId">The reset Id</param>
            <param name="fromCache">From cache or not</param>
            <param name="hasMixedResults">The results are mixed from cache and real builds.</param>
            <param name="overallResult">The overall msbuild result</param>
            <param name="resultsByTarget">The results by target</param>
            <param name="resultsByOutputTaskItem">The results by output TaskItem</param>
            <param name="outputProperties">Output properties</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.ResetId">
            <summary>
            Gets the reset ID.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.FromCache">
            <summary>
            Gets a value indicating whether it is from cache.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.HasMixedResults">
            <summary>
            Gets whether the results are mixed from cache and real builds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.OverallResult">
            <summary>
            Overall msbuild result.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.ResultsByTarget">
            <summary>
            Gets the results by target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.ResultsByOutputTaskItem">
            <summary>
            Gets the results by output TaskItem.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResult.OutputProperties">
            <summary>
            Gets the output properties.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem">
            <summary>
            Design time build result item
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.#ctor(System.String,Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem" /> class.
            </summary>
            <param name="itemSpec"><see cref="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ItemSpec" /> </param>
            <param name="metadata">metadata dictionary</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.#ctor(Microsoft.Build.Framework.ITaskItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem" /> class.
            </summary>
            <param name="taskItem">The task item</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.ItemSpec">
            <summary>
            Gets the MSBuild <see cref="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ItemSpec" /> from TargetResult.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.MetadataNames">
            <summary>
            Gets the list of metadata names.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.MetadataCount">
            <summary>
            Gets the count metadata name/value pairs.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.TryGetMetadata(System.String,System.String@)">
            <summary>
            Attempts to look up the named metadata value.
            </summary>
            <param name="key">The key</param>
            <param name="value">the metadata value</param>
            <returns>True if succeeds</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.Microsoft#VisualStudio#ProjectServices#ISerializableItem#Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.Read(Microsoft.VisualStudio.ProjectServices.CacheReader)">
            <summary>
            Reads a <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <returns>The read object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem.ReadList(Microsoft.VisualStudio.ProjectServices.CacheReader)">
            <summary>
            Reads a list of <see cref="T:Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <returns>The read list</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.KeyValuePairExtensions">
            <summary>
            Extension methods for working with tuples.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.KeyValuePairExtensions.Deconstruct``2(System.Collections.Generic.KeyValuePair{``0,``1},``0@,``1@)">
            <summary>
            Deconstructs a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> into its components.
            </summary>
            <typeparam name="TKey">The key type</typeparam>
            <typeparam name="TValue">The value type</typeparam>
            <param name="pair">The pair to deconstruct</param>
            <param name="key">The output key</param>
            <param name="value">The output value</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.PathHelper">
            <summary>
            Helper class used for common path operations.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.PathHelper.InvalidPathChars">
            <summary>
            Cache of the list of invalid path characters, because this method returns a clone (for security reasons)
            which can cause significant transient allocations
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.PathHelper.IsInvalidPath(System.String)">
            <summary>
            A helper method to detect invalid path of non file system MSBuild items.
            </summary>
            <param name="path">Path to check</param>
            <returns>True, if the string represents an invalid path, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.PathHelper.IsExtended(System.String)">
            <summary>
            Returns true if the path uses the canonical form of extended syntax ("\\?\" or "\??\"). If the
            path matches exactly (cannot use alternate directory separators) Windows will skip normalization
            and path length checks.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.PathHelper.IsValidDriveChar(System.Char)">
            <summary>
            Returns true if the given character is a valid drive letter
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.CacheReader">
            <summary>
            Reads binary formatted cache data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.#ctor(System.Byte[],System.Int32,Microsoft.VisualStudio.ProjectServices.StringTable,Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.CacheReader" /> class.
            </summary>
            <param name="array">The byte array from which to read</param>
            <param name="offset">The initial offset from which to start reading</param>
            <param name="stringTable">The table to look up strings from</param>
            <param name="sharedKeySchemaTable">The table to look up shared-key schema from</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.ReadUInt32">
            <summary>
            Reads the next value as a 32-bit signed integer.
            </summary>
            <returns>The read integer.</returns>
            <exception cref="T:System.FormatException">An IO exception occurs.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.ReadString">
            <summary>
            Reads the next value as a string.
            </summary>
            <returns>The read string.</returns>
            <exception cref="T:System.FormatException">An IO exception occurs.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.ReadListSize">
            <summary>
            Reads the number of items in a list. If the next data value is not a list, an exception is thrown.
            </summary>
            <returns>The size of the list.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.ReadMapSize">
            <summary>
            Reads the number of entries (pairs) in a map (dictionary). If the next data value is not a map, an exception is thrown.
            </summary>
            <returns>The size of the map.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheReader.ReadSharedKeyDictionary">
            <summary>
            Reads values from a shared-key dictionary. If the next data value is not a shared-key dictionary, an exception is thrown.
            </summary>
            <returns>The read shared-key dictionary</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.CacheWriter">
            <summary>
            Writes binary formatted cache data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.#ctor(System.IO.Stream,Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable,Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTableBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.CacheWriter" /> class.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="stringTable">The string table to use.</param>
            <param name="sharedKeySchemaTable">The schema table to use.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.Write(System.UInt32)">
            <summary>
            Writes a 32-bit unsigned integer.
            </summary>
            <param name="value">The integer to write.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.Write(System.String)">
            <summary>
            Writes a string.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.WriteListSize(System.UInt32)">
            <summary>
            Writes the number of items in a list. The caller is expected to follow with that many values.
            </summary>
            <param name="size">The number of items in the list.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.WriteMapSize(System.UInt32)">
            <summary>
            Writes the number of entries (pairs) in a map (dictionary). The caller is expected to follow with that many key-value values.
            </summary>
            <param name="size">The number of items in the map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.WriteSharedKeyDictionary(Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary)">
            <summary>
            Writes the contents of a shared-key dictionary.
            </summary>
            <param name="dic">The shared-key dictionary to write.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.CacheWriter.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.ISerializableItem">
            <summary>
            Represents an object that can be serialized.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.ISerializableItem.Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <summary>
            Serializes object data into a stream
            </summary>
            <param name="writer">The object to write data to</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SerializableList`1">
            <summary>
            Wrapper class for a <see cref="T:System.Collections.Generic.List`1" /> that can be serialized
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableList`1" /> class.
            </summary>
            <param name="list">List instance</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableList`1.Read(Microsoft.VisualStudio.ProjectServices.CacheReader,System.Func{Microsoft.VisualStudio.ProjectServices.CacheReader,`0})">
            <summary>
            Reads a <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableList`1" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <param name="itemReader">A function that reads items to add to the list</param>
            <returns>The read list</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableList`1.Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1">
            <summary>
            Wrapper class for a <see cref="T:System.Collections.Generic.Dictionary`2" /> that can be serialized
            </summary>
            <typeparam name="TValue">Value type</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1" /> class.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1" /> can contain</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1.Read(Microsoft.VisualStudio.ProjectServices.CacheReader,System.Func{Microsoft.VisualStudio.ProjectServices.CacheReader,`0})">
            <summary>
            Reads a <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <param name="valueReader">A function that reads values to add to the dictionary</param>
            <returns>The read dictionary</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyDictionary`1.Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary">
            <summary>
            Wrapper class for a <see cref="T:System.Collections.Generic.Dictionary`2" /> that can be serialized
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary" /> class.
            </summary>
            <param name="dictionary">Source dictionary</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary" /> class.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary" /> can contain</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary.Read(Microsoft.VisualStudio.ProjectServices.CacheReader)">
            <summary>
            Reads a <see cref="T:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <returns>The read dictionary</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary.Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SerializableStringKeyStringValueDictionary.IsSameAs(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Compares the contents of the dictionary with the other one.
            </summary>
            <param name="other">The dictionary to compare</param>
            <returns>True, if the contents are the same, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTable">
            <summary>
            Allows look up of a <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchema" /> by an index.
            </summary>
            <remarks>
            Used in deserialization, where schema are referenced by index, rather than by value, to save space.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTable.#ctor(System.IO.Stream,Microsoft.VisualStudio.ProjectServices.StringTable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTable" /> class.
            </summary>
            <param name="stream">The stream to read from. Caller must close.</param>
            <param name="stringTable">The string table to read key names from.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTable.GetSchema(System.UInt32)">
            <summary>
            Gets the schema at <paramref name="index" />.
            </summary>
            <param name="index">The index of the required schema.</param>
            <returns>The schema at the specified index.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTableBuilder">
            <summary>
            Builds a schema table from a series of <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchema" /> objects, and supports writing it to disk.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTableBuilder.GetId(Microsoft.VisualStudio.ProjectServices.SharedKeySchema)">
            <summary>
            Gets an ID that uniquely identifies <paramref name="schema" /> in this table.
            </summary>
            <param name="schema">The schema to identify.</param>
            <returns>The schema's unique identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTableBuilder.PopulateStringTable(Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable)">
            <summary>
            Ensures all strings used by schema in this table are in <paramref name="stringTable" />.
            </summary>
            <param name="stringTable">The string table to populate.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaTableBuilder.Write(System.IO.Stream,Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable)">
            <summary>
            Writes the schema table to <paramref name="stream" />.
            </summary>
            <param name="stream">The stream to write to. Caller must close.</param>
            <param name="stringTable">Table to get string indexes from.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.StringTable">
            <summary>
            Allows look up of a string by an index.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTable.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.StringTable" /> class.
            </summary>
            <param name="stream">The stream to read from. Caller must close.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTable.GetString(System.Int32)">
            <summary>
            Gets the string at <paramref name="index" />.
            </summary>
            <param name="index">The index of the required string.</param>
            <returns>The string at the specified index.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.StringTableBuilder">
            <summary>
            Builds a string table from a series of string objects, and supports writing it to disk.
            </summary>
            <remarks>
            The string table is likely to be constructed by many parallel threads of execution
            (for example during solution close when all projects serialize themselves).
            To ensure safety, we could use locking, however this locking introduces contention.
            The implementation of this class provides a <see cref="T:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable" /> for each concurrent writer
            to write to. That local table, once disposed, will merge its data into the parent table.
            A consequence of this is that the same string in different projects may have different IDs in
            each local table, however <see cref="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.Write(System.IO.Stream)" /> captures this in the output table data, by writing
            aliases to earlier string indexes in case of duplicates.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.GetLocalTable">
            <summary>
            Gets a function which will return a valid index for a given string.
            This function is not safe for concurrent execution.
            Each 'thread' of execution must request its own calculator.
            </summary>
            <returns>A function that returns string indexes.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.Write(System.IO.Stream)">
            <summary>
            Writes the string table to <paramref name="stream" />.
            Only disposed <see cref="T:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable" /> instances will be included in the output.
            </summary>
            <param name="stream">The stream to write to. Caller must close.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable">
            <summary>
            A string table for use by a single thread of execution and which is not safe for parallel use.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable.Next">
            <summary>
            Once registered as a completed local table with the parent builder,
            this property may contain the next completed local table in a linked-list
            style.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable.#ctor(Microsoft.VisualStudio.ProjectServices.StringTableBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable" /> class.
            </summary>
            <param name="builder">The parent builder.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable.IndexByString">
            <summary>
            Map of string to index for strings seen by this local table.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable.GetIndex(System.String)">
            <summary>
            Gets the index for <paramref name="s" />. If the string is not yet in the table, it will be added and a new index provided.
            </summary>
            <param name="s">The string to obtain an index for.</param>
            <returns>The table index for the added string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringTableBuilder.LocalTable.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.TargetResult">
            <summary>
            Models the results of a design-time build target, including its result code and items.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TargetResult.#ctor(Microsoft.Build.Execution.TargetResultCode,Microsoft.VisualStudio.ProjectServices.SerializableList{Microsoft.VisualStudio.ProjectServices.DesignTimeBuildResultItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.TargetResult" /> class.
            </summary>
            <param name="code">The target's result code.</param>
            <param name="items">Items returned for this target.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.TargetResult.Code">
            <summary>
            Gets the result code for this design-time target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.TargetResult.Items">
            <summary>
            Gets items returned for this design-time target.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TargetResult.Read(Microsoft.VisualStudio.ProjectServices.CacheReader)">
            <summary>
            Reads a <see cref="T:Microsoft.VisualStudio.ProjectServices.TargetResult" /> from cached data.
            </summary>
            <param name="reader">The reader to read from</param>
            <returns>The read target result</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TargetResult.Serialize(Microsoft.VisualStudio.ProjectServices.CacheWriter)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeyComparer">
            <summary>
            Supports the comparison of read-only collections of strings, irrespective of case.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyComparer.Instance">
            <summary>
            Gets a singleton instance of this comparer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyComparer.Equals(System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyComparer.GetHashCode(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary">
            <summary>
            Immutable dictionary of string values keyed by a known, fixed set of string keys.
            This collection allows the representation of such data via an array rather than
            dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.#ctor(Microsoft.VisualStudio.ProjectServices.SharedKeySchema,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary" /> class.
            </summary>
            <param name="schema">schema for this collection</param>
            <param name="values">values inside the dictionary</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Empty">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary" /> that represents an empty collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Count">
            <summary>
            Gets the number of key/value pairs in this dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Keys">
            <summary>
            Gets the array of keys within this dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Schema">
            <summary>
            Gets the schema used by this dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.TryGetValue(System.String,System.String@)">
            <summary>
            Looks up the value for <paramref name="key" />.
            </summary>
            <param name="key">The key to look up</param>
            <param name="value">The retrieved value, or <see langword="null" /> if not found.</param>
            <returns><see langword="true" /> if found, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.GetEnumerator">
            <summary>
            Returns an enumerator over the contents of this collection, without allocation.
            </summary>
            <remarks>
            This method intentionally does not implement <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.
            </remarks>
            <returns>The enumerator</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator">
            <summary>
            Struct enumerator to avoid heap allocation during enumeration of contents.
            Enumeration order is determined by the "indexByKey" dictionary that backs the collection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.#ctor(Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator" /> struct.
            </summary>
            <param name="dictionary">The dictionary to enumerate</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.Current">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary.Enumerator.Reset">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchema">
            <summary>
            A helper class to create a set of dictionaries with same keys. Immutable.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.#ctor(System.Collections.Immutable.ImmutableArray{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchema" /> class.
            </summary>
            <param name="keys">Keys</param>
            <exception cref="T:System.ArgumentException"><paramref name="keys" /> contains a duplicate according to <see cref="P:System.StringComparer.OrdinalIgnoreCase" />.</exception>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.Empty">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchema" /> that represents an empty collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.Keys">
            <summary>
            Gets the keys shared across all <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary" /> instances of this schema.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.TryGetIndex(System.String,System.Int32@)">
            <inheritdoc cref="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.GetIndexByKeyEnumerator">
            <summary>
            Returns an enumerator over the index-by-key mapping within this schema.
            </summary>
            <returns>The requested enumerator.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchema.CreateDictionary(System.String[])">
            <summary>
            Create a shared key dictionary based on the set of values.
            </summary>
            <param name="values">Values in the dictionary</param>
            <returns>A shared key dictionary</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaRegistry">
            <summary>
            Global static registry of all observed shared-key schema.
            </summary>
            <remarks>
            The assumption is that in any given process there are only a few unique schema for shared-key
            dictionaries, and that retaining references to these indefinitely is not of concern.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.SharedKeySchemaRegistry.GetOrCreate(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary" /> for the given set of <paramref name="keys" />.
            </summary>
            <param name="keys">The set of keys to use in dictionaries created by this factory</param>
            <returns>A factory that produces collections mapped from <paramref name="keys" /></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.StringPool">
            <summary>
            Provides an alternative to interning strings that can be cleared between sessions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringPool.GetOrAdd(System.String)">
            <summary>
            Adds the string to the pool or returns the already interned string.
            </summary>
            <param name="stringToAdd">String to add or retrieve from the string pool.</param>
            <returns>The string stored in the pool.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.StringPool.Clear">
            <summary>
            Removes all entries from the string pool.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.TaskItemExtensions">
            <summary>
            Extension methods for working with <see cref="T:Microsoft.Build.Framework.ITaskItem" />.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ProjectServices.TaskItemExtensions.FileItemOnlyMetadata">
            <summary>
            The metadata which is only applicable to file based items
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TaskItemExtensions.GetDefaultMetadata(Microsoft.Build.Framework.ITaskItem)">
            <summary>
            Gets the default set of metadata for <paramref name="item" />.
            </summary>
            <param name="item">The item to read</param>
            <returns>The dictionary containing default metadata values</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TaskItemExtensions.GetMetadata(Microsoft.Build.Framework.ITaskItem,Microsoft.VisualStudio.ProjectServices.SharedKeySchema)">
            <summary>
            Gets a <see cref="T:Microsoft.VisualStudio.ProjectServices.SharedKeyDictionary" /> containing the metadata in <paramref name="item" />
            according to <paramref name="schema" />.
            </summary>
            <param name="item">The item to read</param>
            <param name="schema">A schema that defines what metadata properties to read</param>
            <returns>The dictionary containing all requested metadata values</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ProjectServices.TaskItemExtensions.SafeGetMetadata(Microsoft.Build.Framework.ITaskItem,System.String)">
            <summary>
            Gets the item's metadata for <paramref name="name" />, or <see langword="null" /> if an exception
            was thrown during the get operation.
            </summary>
            <param name="item">The task item to query</param>
            <param name="name">Name of the metadata to read</param>
            <returns>The metadata value, or <see langword="null" /></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo">
            <summary>
            Prefetch starting info for the project
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.Error">
            <summary>
            If project can not be prefetched, this is the reason (for telemetry)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.BaseTypeGuid">
            <summary>
            project Base  type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.AggregateTypeGuid">
            <summary>
            flavor guid (top)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.Flavors">
            <summary>
            all flavors
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.OutputAssembly">
            <summary>
            Oputput assembly if available
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.ProjectFileFormat">
            <summary>
            project file encoding
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.UserFileFormat">
            <summary>
            user file encoding
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ProjectServices.IProjectOpenInfo.References">
            <summary>
            P2P ref GUID's (for fast resolve if possible)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon">
            <summary>
            Common state cache
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.#ctor(Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon" /> class
            </summary>
            <param name="buildResult">target outputs raw</param>
            <param name="projectFile">project file</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.ProjectFolder">
            <summary>
            Project folder
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.RuleSet">
            <summary>
            ruleset file
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.AdditionalOptions">
            <summary>
            hacked options.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.Imports">
            <summary>
            /imports
            VB imports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.Analyzers">
            <summary>
            /analyzer:
            Analyzers dlls
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.References">
            <summary>
            references
            /reference: {regular ref} or /link: {embedded interop ref} (except one in the form of vbc=v:\?) or with them ...
            Note apparently vbc=v:\... was the way to set a reference alias. Aka "vbc" should be used as alias.
            it is possible to have multiple aliases - alias1,alias2=v:\....
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.AdditionalFiles">
            <summary>
            additional files
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.AnalyzerConfigs">
            <summary>
            Analyzer configuration files, e.g., .editorconfig.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.PotentialAnalyzerConfigs">
            <summary>
            Paths where relevant analyzer configuration files _may_ exist.
            See <see cref="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.AnalyzerConfigs" /> for the set of analyzer configs that actually exist on disk.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.Sources">
            <summary>
            sources
            all items that are not options (aka don't start with /)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.ReferenceCache">
            <summary>
            references
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HasInvalidResults">
            <summary>
            Whether results are considered valid
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.MakeRooted(System.String)">
            <summary>
            make the path absolute assuming project folder is the root.
            it also normalizes the path (removing .., and fixing / to \).
            </summary>
            <param name="path">path to make absolute</param>
            <returns>the absolute path</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.NormalizeFilePath(System.String)">
            <summary>
            normalize the path as expected.
            (aka no ..\ and such)
            </summary>
            <param name="path">path to normalize</param>
            <returns>normalized path</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.Serialize">
            <summary>
            Serialize the content
            </summary>
            <returns>CLangCompiler/CLangBuildMgr cache formated blob</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.SerializeForLangCompiler(System.IO.Stream)">
            <summary>
            Provide CLangCompiler compatible cache blob
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.UnquoteString(System.String)">
            <summary>
            simple unquote a string.
            </summary>
            <param name="quoted">potentially quoted string</param>
            <returns>unquoted string</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.SerializeForCompiler(System.IO.Stream)">
            <summary>
            Language specific compiler data
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.SplitFileArgList(System.String)">
            <summary>
            split and dequote a file spec strings. Note VB (at least for references push all in a single! /addreference:"ref1","ref2" ... etc.
            </summary>
            <param name="quoted">potentially quoted string</param>
            <returns>dequoted strings</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleHackedOptions(System.String)">
            <summary>
            Collects new options that no one bothered add to the original host object/ LS init interfaces.
            </summary>
            <param name="option">the option string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleReference(System.String,System.Boolean)">
            <summary>
            references
            </summary>
            <param name="value">argument</param>
            <param name="embeded">embedded or not</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleAdditionalFile(System.String)">
            <summary>
            additional files
            </summary>
            <param name="value">argument</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleAnalyzerConfig(System.String)">
            <summary>
            Analyzer config files
            </summary>
            <param name="value">File path</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleAnalyzer(System.String)">
            <summary>
            analyzer dlls
            </summary>
            <param name="value">argument</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.HandleSource(System.String)">
            <summary>
            sources files
            </summary>
            <param name="value">argument</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.ParseLine(System.String,System.String@)">
            <summary>
            parse an argument line
            </summary>
            <param name="line">string</param>
            <param name="value">argument value if any</param>
            <returns>argument name if argument</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.ProcessSlashes(System.Text.StringBuilder,System.String,System.Int32@)">
            <summary>
            Mimic behavior of the native function by the same name.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.RemoveQuotesAndSlashes(System.String)">
            <summary>
            Remove the extraneous quotes and slashes from the argument.  This function is designed to have
            compat behavior with the native compiler.
            </summary>
            <remarks>
            Mimics the function RemoveQuotes from the native C# compiler.  The native VB equivalent of this
            function is called RemoveQuotesAndSlashes.  It has virtually the same behavior except for a few
            quirks in error cases.
            </remarks>
            <param name="arg">initial argument value</param>
            <returns>fixed value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.BuildFileLinksMap(Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader)">
            <summary>
            Builds a mapping from a file path to the &lt;Link&gt; metadata associated with that
            item, if any. Files without such metadata are not included in the map.
            </summary>
            <param name="buildResult">The containing the build data</param>
            <returns>The completed map</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon.GetPotentialAnalyzerConfigs(Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader)">
            <summary>
            Retrieves the set of potential analyzer config file paths from the build result.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader">
            <summary>
            Abstract representation of the build result.
            Can be sourced either via actual BuildResult or via CommonDTBB service custom dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TryGetValue(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader}@)">
            <summary>
            Gets result for a target
            </summary>
            <param name="targetName">name of the target</param>
            <param name="targetResults">target outputs</param>
            <returns>true if such value exists</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader">
            <summary>
            Abstract representation of a single taskItem build result (basically a list of properties)
            Can be sourced either via actual BuildResult or via CommonDTBB service custom dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader.ItemSpec">
            <summary>
            Item spec property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader.Item(System.String)">
            <summary>
            Indexer version.
            </summary>
            <param name="key">property name</param>
            <returns>the property value. returns NULL if there is no such property</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader.TaskItemReader.TryGetValue(System.String,System.String@)">
            <summary>
            Get a task property
            </summary>
            <param name="property">property name</param>
            <param name="value">the value for the property</param>
            <returns>true if there is such property</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.CompileItemState">
            <summary>
            Represents a source file passed to the compiler, and associated
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.CompileItemState.Path">
            <summary>
            The path to the source file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.CompileItemState.LinkFolder">
            <summary>
            The &lt;Link&gt; metadata for this file, if any.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.CompileItemState.Serialize(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.CSBuildInfo">
            <summary>
            Translated build info to be compatible with the current legacy LS interface.
            TODO: remove this translation by switching to direct target to Roslyn initialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.CSBuildInfo.#ctor(Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ResultsTranslationShared.CSBuildInfo" /> class.
            </summary>
            <param name="buildResult">DT build result</param>
            <param name="projectFile">project file path</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.CSBuildInfo.SerializeForCompiler(System.IO.Stream)">
            <summary>
            Serialize to byte array, in compatible stream as Compiler cache.
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions">
             <summary>
             CS compiler option currently recognized explicitly by legacy project system
            
             Note: Until removed, keep in sync with CCSharpCompilerOptions class in vsproject\cool\coolbld\CscMSBuildHostObject.h
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.AllowUnsafeBlocks">
            <summary>
            vbAllowUnsafeBlocks
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.BaseAddress">
            <summary>
            SetBaseAddress (/*[in]*/ BSTR bstrBaseAddress, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.CheckForOverflowUnderflow">
            <summary>
            SetCheckForOverflowUnderflow (/*[in]*/ VARIANT_BOOL vbCheckForOverflowUnderflow, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DebugType">
            <summary>
            SetDebugType (/*[in]*/ BSTR bstrDebugType, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DefineConstants">
            <summary>
            SetDefineConstants (/*[in]*/ BSTR bstrDefineConstants, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DelaySignExplicitlySet">
            <summary>
            SetDelaySign (/*[in]*/ VARIANT_BOOL vbDelaySignExplicitlySet, /*[in]*/ VARIANT_BOOL vbDelaySign, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DelaySign">
            <summary>
            Delay sign
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DisabledWarnings">
            <summary>
            SetDisabledWarnings (/*[in]*/ BSTR bstrDisabledWarnings, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.DocumentationFile">
            <summary>
            SetDocumentationFile (/*[in]*/ BSTR bstrDocumentationFile, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.EmitDebugInformation">
            <summary>
            SetEmitDebugInformation (/*[in]*/ VARIANT_BOOL vbEmitDebugInformation, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.ErrorReport">
            <summary>
            SetErrorReport (/*[in]*/ BSTR bstrErrorReport, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.FileAlignment">
            <summary>
            SetFileAlignment (/*[in]*/ long lFileAlignment, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.HighEntropyVA">
            <summary>
            SetHighEntropyVA (/*[in]*/ VARIANT_BOOL vbHighEntropyVA, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.KeyContainer">
            <summary>
            SetKeyContainer (/*[in]*/ BSTR bstrKeyContainer, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.KeyFile">
            <summary>
            SetKeyFile (/*[in]*/ BSTR bstrKeyFile, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.LangVersion">
            <summary>
            SetLangVersion (/*[in]*/ BSTR bstrLangVersion, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.TargetType2">
            <summary>
            SetMainEntryPoint (/*[in]*/ BSTR bstrTargetType, /*[in]*/ BSTR bstrMainEntryPoint, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.MainEntryPoint">
            <summary>
            Main entry point
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.ModuleAssemblyName">
            <summary>
            SetModuleAssemblyName (/*[in]*/ BSTR bstrModuleAssemblyName, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.NoStandardLib">
            <summary>
            SetNoStandardLib (/*[in]*/ VARIANT_BOOL vbNoStandardLib, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.Optimize">
            <summary>
            SetOptimize(/*[in]*/ VARIANT_BOOL vbOptimize, /*[out,retval]*/ VARIANT_BOOL* pvbRetVal);
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.OutputAssembly">
            <summary>
            SetOutputAssembly (/*[in]*/ BSTR bstrOutputAssembly, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.Platform">
            <summary>
            SetPlatform (/*[in]*/ BSTR bstrPlatform, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.PdbFile">
            <summary>
            SetPdbFile (/*[in]*/ BSTR bstrPdbFile, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.SubsystemVersion">
            <summary>
            SetSubsystemVersion (/*[in]*/ BSTR bstrSubsystemVersion, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.TargetType">
            <summary>
            SetTargetType (/*[in]*/ BSTR bstrTargetType, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.TreatWarningsAsErrors">
            <summary>
            SetTreatWarningsAsErrors (/*[in]*/ VARIANT_BOOL vbTreatWarningsAsErrors, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.WarningLevel">
            <summary>
            SetWarningLevel (/*[in]*/ long lWarningLevel, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.WarningsAsErrors">
            <summary>
            SetWarningsAsErrors (/*[in]*/ BSTR bstrWarningsAsErrors, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.WarningsNotAsErrors">
            <summary>
            SetWarningsNotAsErrors (/*[in]*/ BSTR bstrWarningsNotAsErrors, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.Win32Icon">
            <summary>
            SetWin32Icon (/*[in]*/ BSTR bstrWin32Icon, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.Win32Manifest">
            <summary>
            SetWin32Manifest (/*[in]*/ BSTR bstrWin32Manifest, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.Win32Resource">
            <summary>
            SetWin32Resource (/*[in]*/ BSTR bstrWin32Resource, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.ApplicationConfiguration">
            <summary>
            SetApplicationConfiguration (/*[in]*/ BSTR bstrApplicationConfiguration, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.CompilerOptions">
            <summary>
            SetCompilerOptions(/*[in]*/ BSTR bstrCompilerOptions, /*[out,retval]*/ VARIANT_BOOL * pvbRetVal );
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.CSOptions.VSPSerialize(System.IO.Stream)">
            <summary>
            Serialize options
            </summary>
            <param name="outStream">stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.ISerializableItem">
            <summary>
            serializable item element (compatible with legacy items cache)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ISerializableItem.Serialize(System.IO.Stream)">
            <summary>
            do the serialization
            </summary>
            <param name="outStream">the stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState">
            <summary>
            Reference item data preserved
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState.Path">
            <summary>
            assembly full path
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState.Aliases">
            <summary>
            Aliases
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState.ProjectGuid">
            <summary>
            Project guid (if project reference)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState.EmbedInteropTypes">
            <summary>
            Embed Interop Types
            Note the member type for this is BOOL, that is 4 bytes integer (0=false, 1= true)
            the VARIANT_BOOL is a 2 bytes integer (0=false, -1 = true).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ReferenceItemState.Serialize(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData">
            <summary>
            Build manager references
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.#ctor(Microsoft.VisualStudio.ResultsTranslationShared.BuildInfoCommon,Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData" /> class.
            </summary>
            <param name="context">overall translation context object</param>
            <param name="buildResult">build result</param>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.PtPMap">
            <summary>
            P2P table
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.SerializeForBuildManager(System.IO.Stream)">
            <summary>
            Serialize references
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.SerializeReferenceGroups(System.IO.Stream)">
            <summary>
            Serialize reference groups
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup">
            <summary>
            Reference group
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.Identity">
            <summary>
            string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.Name">
            <summary>
            string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.VersionMajor">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.VersionMinor">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.BuildNumber">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.RevisionNumber">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.DirPath">
            <summary>
            string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.RefPaths">
            <summary>
            DWORD size;
            size * string;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.ReferencesData.ReferenceGroup.Serialize(System.IO.Stream)">
            <summary>
            Serialize the group
            </summary>
            <param name="ms">out stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.SerializableItemList`1">
            <summary>
            Serializable items collection
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.SerializableItemList`1.Serialize(System.IO.Stream)">
            <summary>
            serialize the list
            </summary>
            <param name="outStream">stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.VBBuildInfo">
            <summary>
            Translated build info to be compatible with the current legacy LS interface.
            TODO: remove this translation by switching to direct target to Roslyn initialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VBBuildInfo.#ctor(Microsoft.VisualStudio.ResultsTranslationShared.BuildResultReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.ResultsTranslationShared.VBBuildInfo" /> class.
            </summary>
            <param name="buildResult">DT build result</param>
            <param name="projectFile">Full project file path</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VBBuildInfo.SerializeForCompiler(System.IO.Stream)">
            <summary>
            Serialize to byte array, in compatible stream as Compiler cache.
            </summary>
            <param name="ms">stream</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VBBuildInfo.HandleImports(System.String)">
            <summary>
            analyzer imports
            </summary>
            <param name="value">argument</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes">
            <summary>
            output types
            as defined in vbidl.idl
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_None">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_ConsoleEXE">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_WindowsEXE">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_Library">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_Module">
            <summary>
            4
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_AppContainerEXE">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VbCompilerOutputTypes.OUTPUT_WinMDObj">
            <summary>
            6
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.WarningLevel">
            <summary>
            warning level
            as defined in vbidl.idl
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.WarningLevel.WARN_None">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.WarningLevel.WARN_Regular">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.WarningLevel.WARN_AsError">
            <summary>
            2
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION">
            <summary>
            LANGVERSION from vbidl.idl
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_CURRENT">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_10">
            <summary>
            10
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_11">
            <summary>
            11
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_12">
            <summary>
            12
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_14">
            <summary>
            13
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_15">
            <summary>
            14
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.LANGVERSION.LANGUAGE_EXPERIMENTAL">
            <summary>
            maxint
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.VBRUNTIME_KIND">
            <summary>
            VBRUNTIME_KIND from vbidl.idl (nice to add argument relationship there)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBRUNTIME_KIND.DefaultRuntime">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBRUNTIME_KIND.NoRuntime">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBRUNTIME_KIND.SpecifiedRuntime">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBRUNTIME_KIND.EmbeddedRuntime">
            <summary>
            3
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions">
             <summary>
             VB compiler option currently recognized explicitly by legacy project system
            
             Note: Untill removed, keep in sync with CCSharpCompilerOptions class in vsproject\cool\coolbld\CscMSBuildHostObject.h
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.ExeName">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.XMLDocName">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OutputPath">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.TemporaryPath">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OutputType">
            <summary>
            VbCompilerOutputTypes
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.DefaultNamespace">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.Startup">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.CondComp">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.RemoveIntChecks">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OptionStrictOff">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OptionExplicitOff">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OptionCompareText">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.OptionInferOff">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.GenerateSymbolInfo">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.GeneratePdbOnly">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.Optimize">
            <summary>
            BOOL to int
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.StrongNameKeyFile">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.StrongNameContainer">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.DelaySign">
            <summary>
            BOOL
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.Win32ResFile">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.IconFile">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.LoadAddress">
            <summary>
            size_t
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.WarningLevel">
            <summary>
            WarningLevel
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.DisabledWarnings">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.WarningsAsErrors">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.WarningsNotAsErrors">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.EnableIncrementalCompilation">
            <summary>
            BOOL
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.Align">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.DefaultCodePage">
            <summary>
            DWORD
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.PlatformType">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.NoStandardLibs">
            <summary>
            BOOL
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.UacManifestFile">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.LangVersion">
             <summary>
             LANGVERSION
            
             Note this currently is NOT saved by the VB Compiler cache (probably a bug)
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.VBRuntimeKind">
            <summary>
            VBRUNTIME_KIND
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.SpecifiedVBRuntime">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.HighEntropyVA">
            <summary>
            BOOL
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.SubsystemVersion">
            <summary>
            LPCWSTR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.ThreatWarningAsErrors">
            <summary>
            These two are logical variables that used to determine the WarningLevel value for VB.
            Not to be serialized themselves
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.NoWarn">
            <summary>
            see above
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VBOptions.VSPSerialize(System.IO.Stream)">
            <summary>
            Serialize options
            </summary>
            <param name="outStream">stream</param>
        </member>
        <member name="T:Microsoft.VisualStudio.ResultsTranslationShared.VSP">
            <summary>
            VSPSerialize equivalents
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VSP.MarkerListBeginItem">
            <summary>
            sanity check markers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VSP.MarkerListEnd">
            <summary>
            sanity check markers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.ResultsTranslationShared.VSP.MarkerCompilerCacheMarker">
            <summary>
            sanity check markers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.SafeGetMetadata(Microsoft.Build.Framework.ITaskItem,System.String)">
            <summary>
            no throw version of ITaskItem.GetMetadata();
            </summary>
            <param name="item">task item</param>
            <param name="metadataName">metadata name</param>
            <returns>metadata value (null if not present)</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.ToBOOL(System.String)">
            <summary>
            convert msbuild string to C++ BOOL value.
            </summary>
            <param name="value">msbuild string.</param>
            <returns>value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.ToDWORD(System.String)">
            <summary>
            convert msbuild string to C++ DWORD value.
            </summary>
            <param name="value">msbuild string.</param>
            <returns>parsed int.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.ToGuid(System.String)">
            <summary>
            convert msbuild string to C++ GUID value
            </summary>
            <param name="value">msbuild string</param>
            <returns>value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.Serialize(System.IO.Stream,System.Guid)">
            <summary>
            GUID
            </summary>
            <param name="stream">stream</param>
            <param name="value">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.Serialize(System.IO.Stream,System.Boolean)">
            <summary>
            boolean (VARIANT_BOOL = 0 (false) or -1 (true))
            </summary>
            <param name="stream">stream</param>
            <param name="value">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.Serialize(System.IO.Stream,System.Int32)">
            <summary>
            integer (4 bytes)
            </summary>
            <param name="stream">stream</param>
            <param name="value">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.Serialize(System.IO.Stream,System.String)">
            <summary>
            string
            [size] - 4bytes: 0 if null, Lenght+1 otherwise;
            [char array] Lenght*2 if not null or empty
            </summary>
            <param name="stream">stream</param>
            <param name="value">value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.ResultsTranslationShared.VSP.Serialize``1(System.IO.Stream,``0)">
            <summary>
            Serializable item
            </summary>
            <typeparam name="T"> item type</typeparam>
            <param name="stream">stream</param>
            <param name="value">value</param>
        </member>
        <member name="M:OsLib.PathHelper.GetAbsolutePathRelativeToProjectPath(System.String,System.String)">
            <summary>
            If <paramref name="relativeFileName" /> is a relative path, converts it to absolute path using <paramref name="projectFileName" /> as a reference.
            If <paramref name="relativeFileName" /> is an absolute path, it is returned as is.
            </summary>
            <param name="relativeFileName">File name to convert to absolute path.</param>
            <param name="projectFileName">Name of project file that contains <paramref name="relativeFileName" />.</param>
            <returns><paramref name="relativeFileName" /> converted to absolute path.</returns>
            <remarks>
            Null or empty paths are returned as is. In addition, if <paramref name="relativeFileName" /> does not look like a path -
            no path separators nor file extension - it is considered to be a tool name (e.g. "ResGen"), and also returned as is.
            </remarks>
        </member>
        <member name="M:OsLib.PathHelper.MakeRootedStrict(System.String,System.String)">
            <summary>
            Generates an absolute path from a base path and another path.
            this flavor of MakeRooted requires to pass a rooted basePath.
            </summary>
            <param name="basePath">
            An absolute path to use as the root if <paramref name="path" /> is relative.
            IMPORTANT: if basePath is a directory, it must end with a directory separator character or else
            it will be treated like a filename and discarded.
            </param>
            <param name="path">A relative or absolute path, that needs to be absolute.</param>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="basePath" /> argument is not an absolute path.</exception>
            <returns>
            A normalized, absolute path.  A path with relative parents (i.e. c:\temp\tmp\..\a.txt) will never be returned.
            Not necessarily canonical, in that the file casing of the path is not guaranteed to be consistent.
            </returns>
        </member>
        <member name="M:OsLib.PathHelper.PathNeedsNormalization(System.String)">
            <summary>
            A few fast checks that determine whether normalization of a path is warranted.
            </summary>
            <param name="path">A non-empty path.</param>
            <returns><c>true</c> if normalization is likely needed; <c>false</c> if normalization doesn't appear to be needed.</returns>
            <remarks>
            In the interest of executing very fast (since this method is used in fast-or-slow-path checks)
            this method by no means is comprehensive, but it should catch the common causes for needing normalization.
            </remarks>
        </member>
        <member name="T:Helpers.Threading.SerialExecuteQueue`1">
            <summary>
            Support for pipeline execution pattern we use around.
            </summary>
            <typeparam name="StateType"></typeparam>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" /><DigestValue>pdcwgHIYM1UzifojmQoiUcEpPsYyf+ngwd9Q+wW5xUM=</DigestValue></Reference></SignedInfo><SignatureValue>FvdXv2iD+4skrskBQsiRJOczqe1cOho3w7b2Xm+xq6gG6r9KSmp7YvAVFU94Aw+v+RWTyiU3YULWmqzLdVM7exAGvKOYNtXHhgq23WpfiWu/ka/+fESRsRgcx770w/u/UyF3CWMrnQYFewGMRbBX/DVSH5xubjCVVAv//6XnFrunSg247S9CjCBoABRdH1a+mK4HzdmfVv50qb3qcPSSt+DdZqAKMBPbDcBci98TRYiPm7vz0f2dsVgmTZRVCARwQfzJzf5hrsZ9pZM4fJgdwFmn6VG2kRpLJO78UbZeZFbWDX4p5ZQ2t+ik6IDGbfdNMQkZR6qkQC8UYhCbtokkcA==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>1Cj3ChlWunG6BkFNNzjW1CspeFqR+kNl6PXD90YV0zmugukx5bXdkX545VEBvjMKMvd4hphihDBf48jtl3YsDD+Nu4/dAvzzGP3eb2N9bMfrnbW4n+xgie4ydby83Y9vM1eK9BRhushL/rVDXpUyLBZpkm9BVIibVOK+bHwk4b4PHSPxfR4esTGaFbYvpG1ZWvoZRvG3+LNNFU8OLgGYYxkxQmBUcrSid/5rXoNqp8LxwzoFe0EnVeXVnXdPsc3LhtKoHd6AggIx/GZo5qMJB1HuHVJm3GX17IFpTn3OgxuyUvg3iWpNQ72m2pmKh4NQFHmdPrJKZMKysF0xcAUZbQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>MIIGAzCCA+ugAwIBAgITMwAAA01OkaYaKLB4jwAAAAADTTANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExMB4XDTIzMDMxNjE4NDMyOFoXDTI0MDMxNDE4NDMyOFowdDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1Cj3ChlWunG6BkFNNzjW1CspeFqR+kNl6PXD90YV0zmugukx5bXdkX545VEBvjMKMvd4hphihDBf48jtl3YsDD+Nu4/dAvzzGP3eb2N9bMfrnbW4n+xgie4ydby83Y9vM1eK9BRhushL/rVDXpUyLBZpkm9BVIibVOK+bHwk4b4PHSPxfR4esTGaFbYvpG1ZWvoZRvG3+LNNFU8OLgGYYxkxQmBUcrSid/5rXoNqp8LxwzoFe0EnVeXVnXdPsc3LhtKoHd6AggIx/GZo5qMJB1HuHVJm3GX17IFpTn3OgxuyUvg3iWpNQ72m2pmKh4NQFHmdPrJKZMKysF0xcAUZbQIDAQABo4IBgjCCAX4wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYBBQUHAwMwHQYDVR0OBBYEFCHdiJoNkqdOVOlyNOI5YtiqIS/vMFQGA1UdEQRNMEukSTBHMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxFjAUBgNVBAUTDTIzMDAxMis1MDA1MTcwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggrBgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQAjBE/Frsy6w8Hsbk1GXvb9sa1vFhlD0UFZsidW/wcymAWeWlOEL4eS82XvYzhMQ2FJSm/2O95aiCH1HBDv+lt2/u7dT/ZvTNcT62b+XH50goLqKDw6uK0Hv4gnTQ8B0+l2FusnrcUyTDqOLVA20ktGIma+zGm9sJI4DRWtI0RYXkvXWk0taCf8+WzZRop8atr/Gs0j/xnB/7fHk6x0H3Gsd1mzxC6BhyG68q0lGjgqYbJwjVKlDeRWxDJWreTLmPeKxjCZ6tSBHekvJ4CugvBPUlqRhDtzQ2tDZQFYqK6RnyNDWCG3cp8jgfOOmlgIzX4E4SHHc3VhbwJf+pLVlyxE5/Lv5WEMlhprpd8s/sNOqbiDw/aeCj4lgZAnrCgx71y609wWy2fHSqkjlfA7cyxQH3PagLDYhvBKGrYZbiQbG8hW6Xm2nSpRKxYnQF/ChLrJPIbR6okpDccnWpi/7Sn8d1f7wwKEBOfcrL+K96RPs3cnzGoq75BTTcO3D59ZBxnMMPXRUmNkMAMYTM5qDNBvjPmLwZwbucI38TazEYpUW8TOgo/YShYdGE8G2ujO857Rx6V93fp2m4xZv05zEUTjoCFyc2G8yimjtoNZFnshtkLbyEdeO85a20A+F9dAG60YPQqcFu8WMcsHs4/ojQHPkJhc0feHcyZBD1EgiT7ExQ==</X509Certificate><X509Certificate>MIIHejCCBWKgAwIBAgIKYQ6Q0gAAAAAAAzANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAq/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe0t+bU7IKLMOv2akrrnoJr9eWWcpgGgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpcoRb0RrrgOGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++MrWhAfTVYoonpy4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLTswM9sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/jJSHvMAhdCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8kA/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8ReTBw3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmnEyimp31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0wggHpMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2oynUClTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBaBgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4GCCsGAQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNVHSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsGAQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABlAG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKbC5YR4WOSmUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11lhJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6I/MTfaaQdION9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8MyGOLwxS3OW560STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNABQamASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a8/jyFqGaJ+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ahXJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7RyOA9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33VtY5E90Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr/Xmfwb1tbWrJUnMTDXpQzQ==</X509Certificate><X509Certificate>MIIF7TCCA9WgAwIBAgIQP4vItfyfspZDtWnWbELhRDANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTEwHhcNMTEwMzIyMjIwNTI4WhcNMzYwMzIyMjIxMzA0WjCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCygEGqNThNE3IyaCJNuLLx/9VSvGzH9dJKjDbu0cJcfoyKrq8TKG/Ac+M6ztAlqFo6be+ouFmrEyNozQwph9FvgFyPRH9dkAFSWKxRxV8qh9zc2AodwQO5e7BW6KPeZGHCnvjzfLnsDbVU/ky2ZU+I8JxImQxCCwl8MVkXeQZ4KI2JOkwDJb5xalwL54RgpJki49KvhKSn+9GY7Qyp3pSJ4Q6g3MDOmT3qCFK7VnnkH4S6Hri0xElcTzFLh93dBWcmmYDgcRGjuKVB4qRTufcyKYMME782XgSzS0NHL2vikR7TmE/dQgfI6B0S/Jmpaz6SfsjWaTr8ZL22CZ3K/QwLopt3YEsDlKQwaRLWQi3BQUzK3Kr9j1uDRprZ/LHR47PJf0h6zSTwQY9cdNCssBAgBkm3xy0hyFfj0IbzA2j70M5xwYmZSmQBbP3sMJHPQTySx+W6hh1hhMdfgzlirrSSL0fzC/hV66AfWdC7dJse0Hbm8ukG1xDo+mTeacY1logC8Ea4PyeZb8txiSk190gWAjWP1Xl8TQLPX+uKg09FcYj5qQ1OcunCnAfPSRtOBA5jUYxe2ADBVSy2xuDCZU7JNDn1nLPEfuhhbhNfFcRf2X7tHc7uROzLLoax7Dj2cO2rXBPB2Q8Nx4CyVe0096yb5MPa50c8prWPMd/FS6/r8QIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUci06AjGQQ7kUBU7h6qfHMdEjiTQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQELBQADggIBAH9yzw+3xRXbm8BJyiZb/p4T5tPw0tuXX/JLP02zrhmu7deXoKzvqTqjwkGw5biRnhOBJAPmCf0/V0A5ISRW0RAvS0CpNoZLtFNXmvvxfomPEf4YbFGq6O0JlbXlccmh6Yd1phV/yX43VF50k8XDZ8wNT2uoFwxtCJJ+i92Bqi1wIcM9BhS7vyRep4TXPw8hIr1LAAbblxzYXtTFC1yHblCk6MM4pPvLLMWSZpuFXst6bJN8gClYW1e1QGm6CHmmZGIVnYeWRbVmIyADixxzoNOieTPgUFmG2y/lAiXqcyqfABTINseSO+lOAOzYVgm5M0kS0lQLAausR7aRKX1MtHWAUgHoyoL2n8ysnI8X6i8msKtyrAv+nlEex0NVZ09Rs1fWtuzuUrc66U7h14GIvE+OdbtLqPA1qibUZ2dJsnBMO5PcHd94kIZysjik0dySTclY6ysSXNQ7roxrsIPlAT/4CTL2kzU0Iq/dNw13CYArzUgA8YyZGUcFAenRv9FO0OYoQzeZpApKCNmacXPSqs0xE2N2oTdvkjgefRI8ZjLny23h/FKJ3crWZgWalmG+oijHHKOnNlA8OqTfSm7mhzvO6/DggTedEzxSjr25HTTGHdUKaj2YKXCMiSrRq4IQSB/c9O+lxbtVGjhjhE63bK2VVOxlIhBJF7jAHscPrFRH</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>MIIHIDCCBQigAwIBAgITMwAAAdB3CKrvoxfG3QABAAAB0DANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDAeFw0yMzA1MjUxOTEyMTRaFw0yNDAyMDExOTEyMTRaMIHLMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSUwIwYDVQQLExxNaWNyb3NvZnQgQW1lcmljYSBPcGVyYXRpb25zMScwJQYDVQQLEx5uU2hpZWxkIFRTUyBFU046QTAwMC0wNUUwLUQ5NDcxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2UwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDfMlfn35fvM0XAUSmI5qiG0UxPi25HkSyBgzk3zpYO311d1OEEFz0QpAK23s1dJFrjB5gD+SMw5z6EwxC4CrXU9KaQ4WNHqHrhWftpgo3MkJex9frmO9MldUfjUG56sIW6YVF6YjX+9rT1JDdCDHbo5nZiasMigGKawGb2HqD7/kjRR67RvVh7Q4natAVu46Zf5MLviR0xN5cNG20xwBwgttaYEk5XlULaBH5OnXz2eWoIx+SjDO7Bt5BuABWY8SvmRQfByT2cppEzTjt/fs0xp4B1cAHVDwlGwZuv9Rfc3nddxgFrKA8MWHbJF0+aWUUYIBR8Fy2guFVHoHeOze7IsbyvRrax//83gYqo8c5Z/1/u7kjLcTgipiyZ8XERsLEECJ5ox1BBLY6AjmbgAzDdNl2Leej+qIbdBr/SUvKEC+Xw4xjFMOTUVWKWemt2khwndUfBNR7Nzu1z9L0Wv7TAY/v+v6pNhAeohPMCFJc+ak6uMD8TKSzWFjw5aADkmD9mGuC86yvSKkII4MayzoUdseT0nfk8Y0fPjtdw2Wnejl6zLHuYXwcDau2O1DMuoiedNVjTF37UEmYT+oxC/OFXUGPDEQt9tzgbR9g8HLtUfEeWOsOED5xgb5rwyfvIss7H/cdHFcIiIczzQgYnsLyEGepoZDkKhSMR5eCB6Kcv/QIDAQABo4IBSTCCAUUwHQYDVR0OBBYEFDPhAYWS0oA+lOtITfjJtyl0knRRMB8GA1UdIwQYMBaAFJ+nFV0AXmJdg/Tl0mWnG1M1GelyMF8GA1UdHwRYMFYwVKBSoFCGTmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY3JsL01pY3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNybDBsBggrBgEFBQcBAQRgMF4wXAYIKwYBBQUHMAKGUGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAoMSkuY3J0MAwGA1UdEwEB/wQCMAAwFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwgwDgYDVR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4ICAQCXh+ckCkZaA06SNW+qxtS9gHQp4x7G+gdikngKItEr8otkXIrmWPYrarRWBlY91lqGiilHyIlZ3iNBUbaNEmaKAGMZ5YcS7IZUKPaq1jU0msyl+8og0t9C/Z26+atx3vshHrFQuSgwTHZVpzv7k8CYnBYoxdhI1uGhqH595mqLvtMsxEN/1so7U+b3U6LCry5uwwcz5+j8Oj0GUX3b+iZg+As0xTN6T0Qa8BNec/LwcyqYNEaMkW2VAKrmhvWH8OCDTcXgONnnABQHBfXK/fLAbHFGS1XNOtr62/iaHBGAkrCGl6Bi8Pfws6fs+w+sE9r3hX9Vg0gsRMoHRuMaiXsrGmGsuYnLn3AwTguMatw9R8U5vJtWSlu1CFO5P0LEvQQiMZ12sQSsQAkNDTs9rTjVNjjIUgoZ6XPMxlcPIDcjxw8bfeb4y4wAxM2RRoWcxpkx+6IIf2L+b7gLHtBxXCWJ5bMW7WwUC2LltburUwBv0SgjpDtbEqw/uDgWBerCT+Zty3Nc967iGaQjyYQH6H/h9Xc8smm2n6VjySRx2swnW3hr6Qx63U/xY9HL6FNhrGiFED7ZRKrnwvvXvMVQUIEkB7GUEeN6heY8gHLt0jLV3yzDiQA8R8p5YGgGAVt9MEwgAJNY1iHvH/8vzhJSZFNkH8svRztO/i3TvKrjb8Zxwg==</X509Certificate><X509Certificate>MIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJmQAAAAAAFTANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOThpkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjKNVf2AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhgfWpSg0S3po5GawcU88V29YZQ3MFEyHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJprx2rrPY2vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/dvI2k45GPsjksUZzpcGkNyjYtcI4xyDUoveO0hyTD4MmPfrVUj9z6BVWYbWg7mka97aSueik3rMvrg0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKRHh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrbqn427DZM9ituqBJR6L8FA6PRc6ZNN3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEzOUyOArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12NvDMk2ZItboKaDIV1fMHSRlJTYuVD5C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q4i6tAgMBAAGjggHdMIIB2TASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQWBBQqp1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacbUzUZ6XIwXAYDVR0gBFUwUzBRBgwrBgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYzaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnkuaHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8qW/qXBS2Pk5HZHixBpOXPTEztTnXwnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6U03dmLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVtI1TkeFN1JFe53Z/zjj3G82jfZfakVqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis9/kpicO8F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTpkbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0sHrYUP4KWN1APMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138eW0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5PndLQTHa1V1QJsWkBRH58oWFsc/4Ku+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAnQj0llOZ0dFtq0Z4+7X6gMTN9vMvpe784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQtB1VM1izoXBm8g==</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">MIAGCSqGSIb3DQEHAqCAMIIXbAIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUgYLKoZIhvcNAQkQAQSgggFBBIIBPTCCATkCAQEGCisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQggLVdvY04nB6e983qkb9w5LzL8Nj0vINzO56mBrB2S/UCBmVWyRvJ9RgTMjAyMzEyMDgwMzA4NTUuOTQ1WjAEgAIB9KCB0aSBzjCByzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNOOkEwMDAtMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNloIIR7TCCByAwggUIoAMCAQICEzMAAAHQdwiq76MXxt0AAQAAAdAwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcNMjMwNTI1MTkxMjE0WhcNMjQwMjAxMTkxMjE0WjCByzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNOOkEwMDAtMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3zJX59+X7zNFwFEpiOaohtFMT4tuR5EsgYM5N86WDt9dXdThBBc9EKQCtt7NXSRa4weYA/kjMOc+hMMQuAq11PSmkOFjR6h64Vn7aYKNzJCXsfX65jvTJXVH41BuerCFumFRemI1/va09SQ3Qgx26OZ2YmrDIoBimsBm9h6g+/5I0Ueu0b1Ye0OJ2rQFbuOmX+TC74kdMTeXDRttMcAcILbWmBJOV5VC2gR+Tp189nlqCMfkowzuwbeQbgAVmPEr5kUHwck9nKaRM047f37NMaeAdXAB1Q8JRsGbr/UX3N53XcYBaygPDFh2yRdPmllFGCAUfBctoLhVR6B3js3uyLG8r0a2sf//N4GKqPHOWf9f7u5Iy3E4IqYsmfFxEbCxBAieaMdQQS2OgI5m4AMw3TZdi3no/qiG3Qa/0lLyhAvl8OMYxTDk1FVilnprdpIcJ3VHwTUezc7tc/S9Fr+0wGP7/r+qTYQHqITzAhSXPmpOrjA/Eyks1hY8OWgA5Jg/ZhrgvOsr0ipCCODGss6FHbHk9J35PGNHz47XcNlp3o5esyx7mF8HA2rtjtQzLqInnTVY0xd+1BJmE/qMQvzhV1BjwxELfbc4G0fYPBy7VHxHljrDhA+cYG+a8Mn7yLLOx/3HRxXCIiHM80IGJ7C8hBnqaGQ5CoUjEeXggeinL/0CAwEAAaOCAUkwggFFMB0GA1UdDgQWBBQz4QGFktKAPpTrSE34ybcpdJJ0UTAfBgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBfBgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYIKwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01pY3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQsFAAOCAgEAl4fnJApGWgNOkjVvqsbUvYB0KeMexvoHYpJ4CiLRK/KLZFyK5lj2K2q0VgZWPdZahoopR8iJWd4jQVG2jRJmigBjGeWHEuyGVCj2qtY1NJrMpfvKINLfQv2duvmrcd77IR6xULkoMEx2Vac7+5PAmJwWKMXYSNbhoah+feZqi77TLMRDf9bKO1Pm91Oiwq8ubsMHM+fo/Do9BlF92/omYPgLNMUzek9EGvATXnPy8HMqmDRGjJFtlQCq5ob1h/Dgg03F4DjZ5wAUBwX1yv3ywGxxRktVzTra+tv4mhwRgJKwhpegYvD38LOn7PsPrBPa94V/VYNILETKB0bjGol7KxphrLmJy59wME4LjGrcPUfFObybVkpbtQhTuT9CxL0EIjGddrEErEAJDQ07Pa041TY4yFIKGelzzMZXDyA3I8cPG33m+MuMAMTNkUaFnMaZMfuiCH9i/m+4Cx7QcVwlieWzFu1sFAti5bW7q1MAb9EoI6Q7WxKsP7g4FgXqwk/mbctzXPeu4hmkI8mEB+h/4fV3PLJptp+lY8kkcdrMJ1t4a+kMet1P8WPRy+hTYaxohRA+2USq58L717zFUFCBJAexlBHjeoXmPIBy7dIy1d8sw4kAPEfKeWBoBgFbfTBMIACTWNYh7x//L84SUmRTZB/LL0c7Tv4t07yq42/GccIwggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAVMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAxODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7VgtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/HZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKDRLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gmU3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36MEBydUv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+yOSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoFVZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJiss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGaRnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+AutuqfjbsNkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afomXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZki1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0CAwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnpcjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8GCCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYDVR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcNAQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pcFLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHkwo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AFvonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8AtqgcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mjdAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZMcm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQEcb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2fpCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBMdrVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L+DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJC4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIDUDCCAjgCAQEwgfmhgdGkgc4wgcsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1pY3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJzAlBgNVBAsTHm5TaGllbGQgVFNTIEVTTjpBMDAwLTA1RTAtRDk0NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaIjCgEBMAcGBSsOAwIaAxUAvLfIU/CilF/dZVORakT/Qn7vTImggYMwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQsFAAIFAOkc9FYwIhgPMjAyMzEyMDgwMTQ4MDZaGA8yMDIzMTIwOTAxNDgwNlowdzA9BgorBgEEAYRZCgQBMS8wLTAKAgUA6Rz0VgIBADAKAgEAAgIMjQIB/zAHAgEAAgIT8zAKAgUA6R5F1gIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBCwUAA4IBAQCL4gFNHaNirmS0ERvcWeP3qVFqXIFIPalpCMT/VTUHxnZJoIlgu80rlQWxcpeuWU/5V+/IVlxvn9dScQjdqBwrAcx9Td/3klfdPLu0/tW5idznLflOL3T8p6Az5EMtxL3/IIUIHbH5J1uol5Z1xxGDwXjlbns5BvaE8IoXHGtA6ZMYmqmI87OjoYWQhroe5Enx9sWilDQjpl9ExUAC5xTZ59ckvtyqAvjUCn8f4kvUJTRF7UHg4YpapwYA8iVoiDQhJQulfC7vsqFKEf2ppVL/HxYsuDm57/9JmvgGYLAZSb1Xxi6aQZvmqP5KdtrkrXWzk44sMvacgV50+ZXBjnSoMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMAAAHQdwiq76MXxt0AAQAAAdAwDQYJYIZIAWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQgR2ZI+E1gAb65XdCADMvYXG4PZg0JURFUBzADqbzubNUwgfoGCyqGSIb3DQEJEAIvMYHqMIHnMIHkMIG9BCAIlUAGX7TT/zHdRNmMPnwV2vcOn45k2eVgHq600j8J1zCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB0HcIqu+jF8bdAAEAAAHQMCIEICaYSuzg1QXlSNVpDYBkej7WZhTa24HU9qFJhNcBKaOuMA0GCSqGSIb3DQEBCwUABIICADcPkLqMzeOjQeXkfUI+XAldrSf44u7dk0MPibsO8HTnbjzLsYFpDO68aI2AztWbhF0S9WOHMhJ0MyOVVS7+y4yoxbg9KprhMsguSl4i67sWbVGnEqfqugycMzE1f9huTVC4cYFn/OqG/ir8SUS88RKMAgolawNR7eJGNjE6gYBUvKIpHhwIf/dGPsmjpKdMsqMlP1tj0887FEbdQqGQQ6yjA4VagNNCLoweJB9pke74nutoPzBN4X5FkSgzmvJTTxIWxUnRWXFiP06JG3KdOBX0k5cx+59MBpUYQ96Q5lG6o2/49BnVe5FVVzP7FZ4RRGt5anSrj9a5buTCFrwCcnkREuaZiOuYrG8Dt9BQpvJldxm1+d8GdrbyP+nETGGL7o+TqD+ev1P9jfaDF+R3sS9XkPaKM6AE0TIdBxBleXPxbfH3U31phENosDNBLcIMpn8kUqxeW6Cp4KQpbAIoYNKkdXq7gGsLw6iYz0U/ryfKRXBJCUDV8QrUzrTMYP06AcI2fQHmvMNndXukPYISnOgqfSJZK74ubKA5+hQA+0/KtunHwuPHOq/8pSVz4RQ5RhceuMUeK3tiyL5gc8ZI+Es5fIZFuSKMpdB2JIPFqAbQsPDnKcKMX2tFuWa7cNpRjrFxpZtf/3Q4osK/oyx7NF+KorH5eYM9a0LpEh6BKPAZAAAAAA==</CounterSignature></Object></Signature></doc>
